(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[function(t,n,e){"use strict";e.d(n,"a",(function(){return u}));var r=new Date,i=new Date;function u(t,n,e,o){function a(n){return t(n=0===arguments.length?new Date:new Date(+n)),n}return a.floor=function(n){return t(n=new Date(+n)),n},a.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},a.round=function(t){var n=a(t),e=a.ceil(t);return t-n<e-t?n:e},a.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},a.range=function(e,r,i){var u,o=[];if(e=a.ceil(e),i=null==i?1:Math.floor(i),!(e<r&&i>0))return o;do{o.push(u=new Date(+e)),n(e,i),t(e)}while(u<e&&e<r);return o},a.filter=function(e){return u((function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)}),(function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););}))},e&&(a.count=function(n,u){return r.setTime(+n),i.setTime(+u),t(r),t(i),Math.floor(e(r,i))},a.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?a.filter(o?function(n){return o(n)%t==0}:function(n){return a.count(0,n)%t==0}):a:null}),a}},function(t,n,e){"use strict";e.r(n),e.d(n,"bisect",(function(){return c})),e.d(n,"bisectRight",(function(){return o})),e.d(n,"bisectLeft",(function(){return a})),e.d(n,"ascending",(function(){return r})),e.d(n,"bisector",(function(){return i})),e.d(n,"cross",(function(){return l})),e.d(n,"descending",(function(){return h})),e.d(n,"deviation",(function(){return g})),e.d(n,"extent",(function(){return v})),e.d(n,"histogram",(function(){return A})),e.d(n,"thresholdFreedmanDiaconis",(function(){return D})),e.d(n,"thresholdScott",(function(){return z})),e.d(n,"thresholdSturges",(function(){return S})),e.d(n,"max",(function(){return U})),e.d(n,"mean",(function(){return E})),e.d(n,"median",(function(){return F})),e.d(n,"merge",(function(){return Y})),e.d(n,"min",(function(){return I})),e.d(n,"pairs",(function(){return f})),e.d(n,"permute",(function(){return q})),e.d(n,"quantile",(function(){return C})),e.d(n,"range",(function(){return M})),e.d(n,"scan",(function(){return H})),e.d(n,"shuffle",(function(){return P})),e.d(n,"sum",(function(){return L})),e.d(n,"ticks",(function(){return j})),e.d(n,"tickIncrement",(function(){return T})),e.d(n,"tickStep",(function(){return N})),e.d(n,"transpose",(function(){return X})),e.d(n,"variance",(function(){return p})),e.d(n,"zip",(function(){return B}));var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){var n;return 1===t.length&&(n=t,t=function(t,e){return r(n(t),e)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)<0?r=u+1:i=u}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)>0?i=u:r=u+1}return r}}};var u=i(r),o=u.right,a=u.left,c=o,f=function(t,n){null==n&&(n=s);for(var e=0,r=t.length-1,i=t[0],u=new Array(r<0?0:r);e<r;)u[e]=n(i,i=t[++e]);return u};function s(t,n){return[t,n]}var l=function(t,n,e){var r,i,u,o,a=t.length,c=n.length,f=new Array(a*c);for(null==e&&(e=s),r=u=0;r<a;++r)for(o=t[r],i=0;i<c;++i,++u)f[u]=e(o,n[i]);return f},h=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},d=function(t){return null===t?NaN:+t},p=function(t,n){var e,r,i=t.length,u=0,o=-1,a=0,c=0;if(null==n)for(;++o<i;)isNaN(e=d(t[o]))||(c+=(r=e-a)*(e-(a+=r/++u)));else for(;++o<i;)isNaN(e=d(n(t[o],o,t)))||(c+=(r=e-a)*(e-(a+=r/++u)));if(u>1)return c/(u-1)},g=function(t,n){var e=p(t,n);return e?Math.sqrt(e):e},v=function(t,n){var e,r,i,u=t.length,o=-1;if(null==n){for(;++o<u;)if(null!=(e=t[o])&&e>=e)for(r=i=e;++o<u;)null!=(e=t[o])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++o<u;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=i=e;++o<u;)null!=(e=n(t[o],o,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},m=Array.prototype,y=m.slice,b=m.map,w=function(t){return function(){return t}},_=function(t){return t},M=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),u=new Array(i);++r<i;)u[r]=t+r*e;return u},x=Math.sqrt(50),O=Math.sqrt(10),k=Math.sqrt(2),j=function(t,n,e){var r,i,u,o,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(o=T(t,n,e))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),n=Math.floor(n/o),u=new Array(i=Math.ceil(n-t+1));++a<i;)u[a]=(t+a)*o;else for(t=Math.floor(t*o),n=Math.ceil(n*o),u=new Array(i=Math.ceil(t-n+1));++a<i;)u[a]=(t-a)/o;return r&&u.reverse(),u};function T(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),u=r/Math.pow(10,i);return i>=0?(u>=x?10:u>=O?5:u>=k?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(u>=x?10:u>=O?5:u>=k?2:1)}function N(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),u=r/i;return u>=x?i*=10:u>=O?i*=5:u>=k&&(i*=2),n<t?-i:i}var S=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},A=function(){var t=_,n=v,e=S;function r(r){var i,u,o=r.length,a=new Array(o);for(i=0;i<o;++i)a[i]=t(r[i],i,r);var f=n(a),s=f[0],l=f[1],h=e(a,s,l);Array.isArray(h)||(h=N(s,l,h),h=M(Math.ceil(s/h)*h,l,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,g=new Array(d+1);for(i=0;i<=d;++i)(p=g[i]=[]).x0=i>0?h[i-1]:s,p.x1=i<d?h[i]:l;for(i=0;i<o;++i)s<=(u=a[i])&&u<=l&&g[c(h,u,0,d)].push(r[i]);return g}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:w(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:w([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?w(y.call(t)):w(t),r):e},r},C=function(t,n,e){if(null==e&&(e=d),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,u=Math.floor(i),o=+e(t[u],u,t);return o+(+e(t[u+1],u+1,t)-o)*(i-u)}},D=function(t,n,e){return t=b.call(t,d).sort(r),Math.ceil((e-n)/(2*(C(t,.75)-C(t,.25))*Math.pow(t.length,-1/3)))},z=function(t,n,e){return Math.ceil((e-n)/(3.5*g(t)*Math.pow(t.length,-1/3)))},U=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&e>r&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&e>r&&(r=e);return r},E=function(t,n){var e,r=t.length,i=r,u=-1,o=0;if(null==n)for(;++u<r;)isNaN(e=d(t[u]))?--i:o+=e;else for(;++u<r;)isNaN(e=d(n(t[u],u,t)))?--i:o+=e;if(i)return o/i},F=function(t,n){var e,i=t.length,u=-1,o=[];if(null==n)for(;++u<i;)isNaN(e=d(t[u]))||o.push(e);else for(;++u<i;)isNaN(e=d(n(t[u],u,t)))||o.push(e);return C(o.sort(r),.5)},Y=function(t){for(var n,e,r,i=t.length,u=-1,o=0;++u<i;)o+=t[u].length;for(e=new Array(o);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--o]=r[n];return e},I=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&r>e&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&r>e&&(r=e);return r},q=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},H=function(t,n){if(e=t.length){var e,i,u=0,o=0,a=t[o];for(null==n&&(n=r);++u<e;)(n(i=t[u],a)<0||0!==n(a,a))&&(a=i,o=u);return 0===n(a,a)?o:void 0}},P=function(t,n,e){for(var r,i,u=(null==e?t.length:e)-(n=null==n?0:+n);u;)i=Math.random()*u--|0,r=t[u+n],t[u+n]=t[i+n],t[i+n]=r;return t},L=function(t,n){var e,r=t.length,i=-1,u=0;if(null==n)for(;++i<r;)(e=+t[i])&&(u+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(u+=e);return u},X=function(t){if(!(i=t.length))return[];for(var n=-1,e=I(t,V),r=new Array(e);++n<e;)for(var i,u=-1,o=r[n]=new Array(i);++u<i;)o[u]=t[u][n];return r};function V(t){return t.length}var B=function(){return X(arguments)}},function(t,n,e){"use strict";e.d(n,"d",(function(){return r})),e.d(n,"c",(function(){return i})),e.d(n,"b",(function(){return u})),e.d(n,"a",(function(){return o})),e.d(n,"e",(function(){return a}));var r=1e3,i=6e4,u=36e5,o=864e5,a=6048e5},function(t,n,e){"use strict";e.d(n,"g",(function(){return o})),e.d(n,"c",(function(){return a})),e.d(n,"k",(function(){return c})),e.d(n,"m",(function(){return f})),e.d(n,"i",(function(){return s})),e.d(n,"a",(function(){return l})),e.d(n,"e",(function(){return h})),e.d(n,"h",(function(){return d})),e.d(n,"d",(function(){return p})),e.d(n,"l",(function(){return g})),e.d(n,"n",(function(){return v})),e.d(n,"j",(function(){return m})),e.d(n,"b",(function(){return y})),e.d(n,"f",(function(){return b}));var r=e(0),i=e(2);function u(t){return Object(r.a)((function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+7*n)}),(function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*i.c)/i.e}))}var o=u(0),a=u(1),c=u(2),f=u(3),s=u(4),l=u(5),h=u(6),d=o.range,p=a.range,g=c.range,v=f.range,m=s.range,y=l.range,b=h.range},function(t,n,e){"use strict";e.d(n,"g",(function(){return o})),e.d(n,"c",(function(){return a})),e.d(n,"k",(function(){return c})),e.d(n,"m",(function(){return f})),e.d(n,"i",(function(){return s})),e.d(n,"a",(function(){return l})),e.d(n,"e",(function(){return h})),e.d(n,"h",(function(){return d})),e.d(n,"d",(function(){return p})),e.d(n,"l",(function(){return g})),e.d(n,"n",(function(){return v})),e.d(n,"j",(function(){return m})),e.d(n,"b",(function(){return y})),e.d(n,"f",(function(){return b}));var r=e(0),i=e(2);function u(t){return Object(r.a)((function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+7*n)}),(function(t,n){return(n-t)/i.e}))}var o=u(0),a=u(1),c=u(2),f=u(3),s=u(4),l=u(5),h=u(6),d=o.range,p=a.range,g=c.range,v=f.range,m=s.range,y=l.range,b=h.range},function(t,n,e){"use strict";e.r(n),e.d(n,"create",(function(){return u})),e.d(n,"creator",(function(){return r.a})),e.d(n,"local",(function(){return a})),e.d(n,"matcher",(function(){return f.a})),e.d(n,"mouse",(function(){return s.a})),e.d(n,"namespace",(function(){return l.a})),e.d(n,"namespaces",(function(){return h.a})),e.d(n,"clientPoint",(function(){return d.a})),e.d(n,"select",(function(){return i.a})),e.d(n,"selectAll",(function(){return g})),e.d(n,"selection",(function(){return p.b})),e.d(n,"selector",(function(){return v.a})),e.d(n,"selectorAll",(function(){return m.a})),e.d(n,"style",(function(){return y.b})),e.d(n,"touch",(function(){return b.a})),e.d(n,"touches",(function(){return _})),e.d(n,"window",(function(){return M.a})),e.d(n,"event",(function(){return x.c})),e.d(n,"customEvent",(function(){return x.a}));var r=e(11),i=e(20),u=function(t){return Object(i.a)(Object(r.a)(t).call(document.documentElement))},o=0;function a(){return new c}function c(){this._="@"+(++o).toString(36)}c.prototype=a.prototype={constructor:c,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var f=e(32),s=e(45),l=e(17),h=e(13),d=e(12),p=e(10),g=function(t){return"string"==typeof t?new p.a([document.querySelectorAll(t)],[document.documentElement]):new p.a([null==t?[]:t],p.c)},v=e(16),m=e(31),y=e(33),b=e(46),w=e(21),_=function(t,n){null==n&&(n=Object(w.a)().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=Object(d.a)(t,n[e]);return i},M=e(18),x=e(9)},function(t,n,e){"use strict";n.a=function(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}},function(t,n,e){"use strict";e.d(n,"b",(function(){return i}));var r=e(9);function i(){r.c.stopImmediatePropagation()}n.a=function(){r.c.preventDefault(),r.c.stopImmediatePropagation()}},function(t,n,e){"use strict";e.d(n,"b",(function(){return i})),e.d(n,"c",(function(){return u})),e.d(n,"d",(function(){return o})),e.d(n,"e",(function(){return a})),e.d(n,"a",(function(){return f}));var r,i,u,o,a,c=e(34);function f(t){return r=Object(c.a)(t),i=r.format,u=r.parse,o=r.utcFormat,a=r.utcParse,r}f({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]})},function(t,n,e){"use strict";e.d(n,"c",(function(){return i})),e.d(n,"a",(function(){return s}));var r={},i=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(r={mouseenter:"mouseover",mouseleave:"mouseout"}));function u(t,n,e){return t=o(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function o(t,n,e){return function(r){var u=i;i=r;try{t.call(this,this.__data__,n,e)}finally{i=u}}}function a(t){return t.trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}}))}function c(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,u=n.length;r<u;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function f(t,n,e){var i=r.hasOwnProperty(t.type)?u:o;return function(r,u,o){var a,c=this.__on,f=i(n,u,o);if(c)for(var s=0,l=c.length;s<l;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=f,a.capture=e),void(a.value=n);this.addEventListener(t.type,f,e),a={type:t.type,name:t.name,value:n,listener:f,capture:e},c?c.push(a):this.__on=[a]}}function s(t,n,e,r){var u=i;t.sourceEvent=i,i=t;try{return n.apply(e,r)}finally{i=u}}n.b=function(t,n,e){var r,i,u=a(t+""),o=u.length;if(!(arguments.length<2)){for(s=n?f:c,null==e&&(e=!1),r=0;r<o;++r)this.each(s(u[r],n,e));return this}var s=this.node().__on;if(s)for(var l,h=0,d=s.length;h<d;++h)for(r=0,l=s[h];r<o;++r)if((i=u[r]).type===l.type&&i.name===l.name)return l.value}},function(t,n,e){"use strict";e.d(n,"c",(function(){return W})),e.d(n,"a",(function(){return Z}));var r=e(16),i=e(31),u=e(32),o=function(t){return new Array(t.length)};function a(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}a.prototype={constructor:a,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function c(t,n,e,r,i,u){for(var o,c=0,f=n.length,s=u.length;c<s;++c)(o=n[c])?(o.__data__=u[c],r[c]=o):e[c]=new a(t,u[c]);for(;c<f;++c)(o=n[c])&&(i[c]=o)}function f(t,n,e,r,i,u,o){var c,f,s,l={},h=n.length,d=u.length,p=new Array(h);for(c=0;c<h;++c)(f=n[c])&&(p[c]=s="$"+o.call(f,f.__data__,c,n),s in l?i[c]=f:l[s]=f);for(c=0;c<d;++c)(f=l[s="$"+o.call(t,u[c],c,u)])?(r[c]=f,f.__data__=u[c],l[s]=null):e[c]=new a(t,u[c]);for(c=0;c<h;++c)(f=n[c])&&l[p[c]]===f&&(i[c]=f)}function s(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var l=e(17);function h(t){return function(){this.removeAttribute(t)}}function d(t){return function(){this.removeAttributeNS(t.space,t.local)}}function p(t,n){return function(){this.setAttribute(t,n)}}function g(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function v(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function m(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}var y=e(33);function b(t){return function(){delete this[t]}}function w(t,n){return function(){this[t]=n}}function _(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}function M(t){return t.trim().split(/^|\s+/)}function x(t){return t.classList||new O(t)}function O(t){this._node=t,this._names=M(t.getAttribute("class")||"")}function k(t,n){for(var e=x(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function j(t,n){for(var e=x(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function T(t){return function(){k(this,t)}}function N(t){return function(){j(this,t)}}function S(t,n){return function(){(n.apply(this,arguments)?k:j)(this,t)}}O.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function A(){this.textContent=""}function C(t){return function(){this.textContent=t}}function D(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}function z(){this.innerHTML=""}function U(t){return function(){this.innerHTML=t}}function E(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}function F(){this.nextSibling&&this.parentNode.appendChild(this)}function Y(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}var I=e(11);function q(){return null}function H(){var t=this.parentNode;t&&t.removeChild(this)}function P(){var t=this.cloneNode(!1),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function L(){var t=this.cloneNode(!0),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}var X=e(9),V=e(18);function B(t,n,e){var r=Object(V.a)(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function $(t,n){return function(){return B(this,t,n)}}function R(t,n){return function(){return B(this,t,n.apply(this,arguments))}}var W=[null];function Z(t,n){this._groups=t,this._parents=n}function Q(){return new Z([[document.documentElement]],W)}Z.prototype=Q.prototype={constructor:Z,select:function(t){"function"!=typeof t&&(t=Object(r.a)(t));for(var n=this._groups,e=n.length,i=new Array(e),u=0;u<e;++u)for(var o,a,c=n[u],f=c.length,s=i[u]=new Array(f),l=0;l<f;++l)(o=c[l])&&(a=t.call(o,o.__data__,l,c))&&("__data__"in o&&(a.__data__=o.__data__),s[l]=a);return new Z(i,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=Object(i.a)(t));for(var n=this._groups,e=n.length,r=[],u=[],o=0;o<e;++o)for(var a,c=n[o],f=c.length,s=0;s<f;++s)(a=c[s])&&(r.push(t.call(a,a.__data__,s,c)),u.push(a));return new Z(r,u)},filter:function(t){"function"!=typeof t&&(t=Object(u.a)(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],c=a.length,f=r[i]=[],s=0;s<c;++s)(o=a[s])&&t.call(o,o.__data__,s,a)&&f.push(o);return new Z(r,this._parents)},data:function(t,n){if(!t)return v=new Array(this.size()),h=-1,this.each((function(t){v[++h]=t})),v;var e,r=n?f:c,i=this._parents,u=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var o=u.length,a=new Array(o),s=new Array(o),l=new Array(o),h=0;h<o;++h){var d=i[h],p=u[h],g=p.length,v=t.call(d,d&&d.__data__,h,i),m=v.length,y=s[h]=new Array(m),b=a[h]=new Array(m);r(d,p,y,b,l[h]=new Array(g),v,n);for(var w,_,M=0,x=0;M<m;++M)if(w=y[M]){for(M>=x&&(x=M+1);!(_=b[x])&&++x<m;);w._next=_||null}}return(a=new Z(a,i))._enter=s,a._exit=l,a},enter:function(){return new Z(this._enter||this._groups.map(o),this._parents)},exit:function(){return new Z(this._exit||this._groups.map(o),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,u=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=n&&(i=n(i)),null==e?u.remove():e(u),r&&i?r.merge(i).order():i},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var c,f=n[a],s=e[a],l=f.length,h=o[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)o[a]=n[a];return new Z(o,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],u=i.length-1,o=i[u];--u>=0;)(r=i[u])&&(o&&4^r.compareDocumentPosition(o)&&o.parentNode.insertBefore(r,o),o=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=s);for(var e=this._groups,r=e.length,i=new Array(r),u=0;u<r;++u){for(var o,a=e[u],c=a.length,f=i[u]=new Array(c),l=0;l<c;++l)(o=a[l])&&(f[l]=o);f.sort(n)}return new Z(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each((function(){t[++n]=this})),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,u=r.length;i<u;++i){var o=r[i];if(o)return o}return null},size:function(){var t=0;return this.each((function(){++t})),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,u=n[e],o=0,a=u.length;o<a;++o)(i=u[o])&&t.call(i,i.__data__,o,u);return this},attr:function(t,n){var e=Object(l.a)(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?d:h:"function"==typeof n?e.local?m:v:e.local?g:p)(e,n))},style:y.a,property:function(t,n){return arguments.length>1?this.each((null==n?b:"function"==typeof n?_:w)(t,n)):this.node()[t]},classed:function(t,n){var e=M(t+"");if(arguments.length<2){for(var r=x(this.node()),i=-1,u=e.length;++i<u;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?S:n?T:N)(e,n))},text:function(t){return arguments.length?this.each(null==t?A:("function"==typeof t?D:C)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?z:("function"==typeof t?E:U)(t)):this.node().innerHTML},raise:function(){return this.each(F)},lower:function(){return this.each(Y)},append:function(t){var n="function"==typeof t?t:Object(I.a)(t);return this.select((function(){return this.appendChild(n.apply(this,arguments))}))},insert:function(t,n){var e="function"==typeof t?t:Object(I.a)(t),i=null==n?q:"function"==typeof n?n:Object(r.a)(n);return this.select((function(){return this.insertBefore(e.apply(this,arguments),i.apply(this,arguments)||null)}))},remove:function(){return this.each(H)},clone:function(t){return this.select(t?L:P)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:X.b,dispatch:function(t,n){return this.each(("function"==typeof n?R:$)(t,n))}};n.b=Q},function(t,n,e){"use strict";var r=e(17),i=e(13);function u(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===i.b&&n.documentElement.namespaceURI===i.b?n.createElement(t):n.createElementNS(e,t)}}function o(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}n.a=function(t){var n=Object(r.a)(t);return(n.local?o:u)(n)}},function(t,n,e){"use strict";n.a=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]}},function(t,n,e){"use strict";e.d(n,"b",(function(){return r}));var r="http://www.w3.org/1999/xhtml";n.a={svg:"http://www.w3.org/2000/svg",xhtml:r,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"}},function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var r=e(0),i=Object(r.a)((function(t){t.setMonth(0,1),t.setHours(0,0,0,0)}),(function(t,n){t.setFullYear(t.getFullYear()+n)}),(function(t,n){return n.getFullYear()-t.getFullYear()}),(function(t){return t.getFullYear()}));i.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Object(r.a)((function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)}),(function(n,e){n.setFullYear(n.getFullYear()+e*t)})):null},n.a=i;var u=i.range},function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var r=e(0),i=Object(r.a)((function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)}),(function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()}),(function(t){return t.getUTCFullYear()}));i.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Object(r.a)((function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)}),(function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)})):null},n.a=i;var u=i.range},function(t,n,e){"use strict";function r(){}n.a=function(t){return null==t?r:function(){return this.querySelector(t)}}},function(t,n,e){"use strict";var r=e(13);n.a=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),r.a.hasOwnProperty(n)?{space:r.a[n],local:t}:t}},function(t,n,e){"use strict";n.a=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}},function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var r=e(20),i=e(7);function u(t,n){var e=t.document.documentElement,u=Object(r.a)(t).on("dragstart.drag",null);n&&(u.on("click.drag",i.a,!0),setTimeout((function(){u.on("click.drag",null)}),0)),"onselectstart"in e?u.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}n.a=function(t){var n=t.document.documentElement,e=Object(r.a)(t).on("dragstart.drag",i.a,!0);"onselectstart"in n?e.on("selectstart.drag",i.a,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")}},function(t,n,e){"use strict";var r=e(10);n.a=function(t){return"string"==typeof t?new r.a([[document.querySelector(t)]],[document.documentElement]):new r.a([[t]],r.c)}},function(t,n,e){"use strict";var r=e(9);n.a=function(){for(var t,n=r.c;t=n.sourceEvent;)n=t;return n}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";function r(t){return t*t*t}function i(t){return--t*t*t+1}function u(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}e.d(n,"a",(function(){return r})),e.d(n,"c",(function(){return i})),e.d(n,"b",(function(){return u}))},function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var r=e(0),i=e(2),u=Object(r.a)((function(t){t.setTime(t-t.getMilliseconds())}),(function(t,n){t.setTime(+t+n*i.d)}),(function(t,n){return(n-t)/i.d}),(function(t){return t.getUTCSeconds()}));n.a=u;var o=u.range},function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var r=e(0),i=Object(r.a)((function(){}),(function(t,n){t.setTime(+t+n)}),(function(t,n){return n-t}));i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Object(r.a)((function(n){n.setTime(Math.floor(n/t)*t)}),(function(n,e){n.setTime(+n+e*t)}),(function(n,e){return(e-n)/t})):i:null},n.a=i;var u=i.range},function(t,n,e){"use strict";e.d(n,"a",(function(){return o}));var r=e(0),i=e(2),u=Object(r.a)((function(t){t.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+n)}),(function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*i.c)/i.a}),(function(t){return t.getDate()-1}));n.b=u;var o=u.range},function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var r=e(0),i=e(2),u=Object(r.a)((function(t){t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+n)}),(function(t,n){return(n-t)/i.a}),(function(t){return t.getUTCDate()-1}));n.a=u;var o=u.range},function(t,n,e){"use strict";e.r(n),e.d(n,"transition",(function(){return xt})),e.d(n,"active",(function(){return St})),e.d(n,"interrupt",(function(){return z}));var r,i,u=e(10),o=e(65),a=0,c=0,f=0,s=0,l=0,h=0,d="object"==typeof performance&&performance.now?performance:Date,p="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function g(){return l||(p(v),l=d.now()+h)}function v(){l=0}function m(){this._call=this._time=this._next=null}function y(t,n,e){var r=new m;return r.restart(t,n,e),r}function b(){l=(s=d.now())+h,a=c=0;try{!function(){g(),++a;for(var t,n=r;n;)(t=l-n._time)>=0&&n._call.call(null,t),n=n._next;--a}()}finally{a=0,function(){var t,n,e=r,u=1/0;for(;e;)e._call?(u>e._time&&(u=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:r=n);i=t,_(u)}(),l=0}}function w(){var t=d.now(),n=t-s;n>1e3&&(h-=n,s=t)}function _(t){a||(c&&(c=clearTimeout(c)),t-l>24?(t<1/0&&(c=setTimeout(b,t-d.now()-h)),f&&(f=clearInterval(f))):(f||(s=d.now(),f=setInterval(w,1e3)),a=1,p(b)))}m.prototype=y.prototype={constructor:m,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?g():+e)+(null==n?0:+n),this._next||i===this||(i?i._next=this:r=this,i=this),this._call=t,this._time=e,_()},stop:function(){this._call&&(this._call=null,this._time=1/0,_())}};var M=function(t,n,e){var r=new m;return n=null==n?0:+n,r.restart((function(e){r.stop(),t(e+n)}),n,e),r},x=Object(o.a)("start","end","cancel","interrupt"),O=[],k=function(t,n,e,r,i,u){var o=t.__transition;if(o){if(e in o)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function u(c){var f,s,l,h;if(1!==e.state)return a();for(f in i)if((h=i[f]).name===e.name){if(3===h.state)return M(u);4===h.state?(h.state=6,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=6,h.timer.stop(),h.on.call("cancel",t,t.__data__,h.index,h.group),delete i[f])}if(M((function(){3===e.state&&(e.state=4,e.timer.restart(o,e.delay,e.time),o(c))})),e.state=2,e.on.call("start",t,t.__data__,e.index,e.group),2===e.state){for(e.state=3,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function o(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=5,1),u=-1,o=r.length;++u<o;)r[u].call(t,i);5===e.state&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=6,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=y((function(t){e.state=1,e.timer.restart(u,e.delay,e.time),e.delay<=t&&u(t-e.delay)}),0,e.time)}(t,e,{name:n,index:r,group:i,on:x,tween:O,time:u.time,delay:u.delay,duration:u.duration,ease:u.ease,timer:null,state:0})};function j(t,n){var e=N(t,n);if(e.state>0)throw new Error("too late; already scheduled");return e}function T(t,n){var e=N(t,n);if(e.state>3)throw new Error("too late; already running");return e}function N(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var S,A,C,D,z=function(t,n){var e,r,i,u=t.__transition,o=!0;if(u){for(i in n=null==n?null:n+"",u)(e=u[i]).name===n?(r=e.state>2&&e.state<5,e.state=6,e.timer.stop(),e.on.call(r?"interrupt":"cancel",t,t.__data__,e.index,e.group),delete u[i]):o=!1;o&&delete t.__transition}},U=e(6),E=180/Math.PI,F={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},Y=function(t,n,e,r,i,u){var o,a,c;return(o=Math.sqrt(t*t+n*n))&&(t/=o,n/=o),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,o=-o),{translateX:i,translateY:u,rotate:Math.atan2(n,t)*E,skewX:Math.atan(c)*E,scaleX:o,scaleY:a}};function I(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(u,o){var a=[],c=[];return u=t(u),o=t(o),function(t,r,i,u,o,a){if(t!==i||r!==u){var c=o.push("translate(",null,n,null,e);a.push({i:c-4,x:Object(U.a)(t,i)},{i:c-2,x:Object(U.a)(r,u)})}else(i||u)&&o.push("translate("+i+n+u+e)}(u.translateX,u.translateY,o.translateX,o.translateY,a,c),function(t,n,e,u){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),u.push({i:e.push(i(e)+"rotate(",null,r)-2,x:Object(U.a)(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(u.rotate,o.rotate,a,c),function(t,n,e,u){t!==n?u.push({i:e.push(i(e)+"skewX(",null,r)-2,x:Object(U.a)(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(u.skewX,o.skewX,a,c),function(t,n,e,r,u,o){if(t!==e||n!==r){var a=u.push(i(u)+"scale(",null,",",null,")");o.push({i:a-4,x:Object(U.a)(t,e)},{i:a-2,x:Object(U.a)(n,r)})}else 1===e&&1===r||u.push(i(u)+"scale("+e+","+r+")")}(u.scaleX,u.scaleY,o.scaleX,o.scaleY,a,c),u=o=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var q=I((function(t){return"none"===t?F:(S||(S=document.createElement("DIV"),A=document.documentElement,C=document.defaultView),S.style.transform=t,t=C.getComputedStyle(A.appendChild(S),null).getPropertyValue("transform"),A.removeChild(S),t=t.slice(7,-1).split(","),Y(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))}),"px, ","px)","deg)"),H=I((function(t){return null==t?F:(D||(D=document.createElementNS("http://www.w3.org/2000/svg","g")),D.setAttribute("transform",t),(t=D.transform.baseVal.consolidate())?(t=t.matrix,Y(t.a,t.b,t.c,t.d,t.e,t.f)):F)}),", ",")",")"),P=e(17);function L(t,n){var e,r;return function(){var i=T(this,t),u=i.tween;if(u!==e)for(var o=0,a=(r=e=u).length;o<a;++o)if(r[o].name===n){(r=r.slice()).splice(o,1);break}i.tween=r}}function X(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var u=T(this,t),o=u.tween;if(o!==r){i=(r=o).slice();for(var a={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=a;break}c===f&&i.push(a)}u.tween=i}}function V(t,n,e){var r=t._id;return t.each((function(){var t=T(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)})),function(t){return N(t,r).value[n]}}var B=e(66),$=e(42),R=e(49),W=function(t,n){var e;return("number"==typeof n?U.a:n instanceof B.a?$.a:(e=Object(B.a)(n))?(n=e,$.a):R.a)(t,n)};function Z(t){return function(){this.removeAttribute(t)}}function Q(t){return function(){this.removeAttributeNS(t.space,t.local)}}function J(t,n,e){var r,i,u=e+"";return function(){var o=this.getAttribute(t);return o===u?null:o===r?i:i=n(r=o,e)}}function G(t,n,e){var r,i,u=e+"";return function(){var o=this.getAttributeNS(t.space,t.local);return o===u?null:o===r?i:i=n(r=o,e)}}function K(t,n,e){var r,i,u;return function(){var o,a,c=e(this);if(null!=c)return(o=this.getAttribute(t))===(a=c+"")?null:o===r&&a===i?u:(i=a,u=n(r=o,c));this.removeAttribute(t)}}function tt(t,n,e){var r,i,u;return function(){var o,a,c=e(this);if(null!=c)return(o=this.getAttributeNS(t.space,t.local))===(a=c+"")?null:o===r&&a===i?u:(i=a,u=n(r=o,c));this.removeAttributeNS(t.space,t.local)}}function nt(t,n){return function(e){this.setAttribute(t,n.call(this,e))}}function et(t,n){return function(e){this.setAttributeNS(t.space,t.local,n.call(this,e))}}function rt(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&et(t,i)),e}return i._value=n,i}function it(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&nt(t,i)),e}return i._value=n,i}function ut(t,n){return function(){j(this,t).delay=+n.apply(this,arguments)}}function ot(t,n){return n=+n,function(){j(this,t).delay=n}}function at(t,n){return function(){T(this,t).duration=+n.apply(this,arguments)}}function ct(t,n){return n=+n,function(){T(this,t).duration=n}}function ft(t,n){if("function"!=typeof n)throw new Error;return function(){T(this,t).ease=n}}var st=e(32);function lt(t,n,e){var r,i,u=function(t){return(t+"").trim().split(/^|\s+/).every((function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t}))}(n)?j:T;return function(){var o=u(this,t),a=o.on;a!==r&&(i=(r=a).copy()).on(n,e),o.on=i}}var ht=e(16),dt=e(31),pt=u.b.prototype.constructor,gt=e(33);function vt(t){return function(){this.style.removeProperty(t)}}function mt(t,n,e){return function(r){this.style.setProperty(t,n.call(this,r),e)}}function yt(t,n,e){var r,i;function u(){var u=n.apply(this,arguments);return u!==i&&(r=(i=u)&&mt(t,u,e)),r}return u._value=n,u}function bt(t){return function(n){this.textContent=t.call(this,n)}}function wt(t){var n,e;function r(){var r=t.apply(this,arguments);return r!==e&&(n=(e=r)&&bt(r)),n}return r._value=t,r}var _t=0;function Mt(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function xt(t){return Object(u.b)().transition(t)}function Ot(){return++_t}var kt=u.b.prototype;Mt.prototype=xt.prototype={constructor:Mt,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Object(ht.a)(t));for(var r=this._groups,i=r.length,u=new Array(i),o=0;o<i;++o)for(var a,c,f=r[o],s=f.length,l=u[o]=new Array(s),h=0;h<s;++h)(a=f[h])&&(c=t.call(a,a.__data__,h,f))&&("__data__"in a&&(c.__data__=a.__data__),l[h]=c,k(l[h],n,e,h,l,N(a,e)));return new Mt(u,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Object(dt.a)(t));for(var r=this._groups,i=r.length,u=[],o=[],a=0;a<i;++a)for(var c,f=r[a],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=N(c,e),g=0,v=d.length;g<v;++g)(h=d[g])&&k(h,n,e,g,d,p);u.push(d),o.push(c)}return new Mt(u,o,n,e)},filter:function(t){"function"!=typeof t&&(t=Object(st.a)(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,c=r[i]=[],f=0;f<a;++f)(u=o[f])&&t.call(u,u.__data__,f,o)&&c.push(u);return new Mt(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var c,f=n[a],s=e[a],l=f.length,h=o[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)o[a]=n[a];return new Mt(o,this._parents,this._name,this._id)},selection:function(){return new pt(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=Ot(),r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],c=a.length,f=0;f<c;++f)if(o=a[f]){var s=N(o,n);k(o,t,e,f,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new Mt(r,this._parents,t,e)},call:kt.call,nodes:kt.nodes,node:kt.node,size:kt.size,empty:kt.empty,each:kt.each,on:function(t,n){var e=this._id;return arguments.length<2?N(this.node(),e).on.on(t):this.each(lt(e,t,n))},attr:function(t,n){var e=Object(P.a)(t),r="transform"===e?H:W;return this.attrTween(t,"function"==typeof n?(e.local?tt:K)(e,r,V(this,"attr."+t,n)):null==n?(e.local?Q:Z)(e):(e.local?G:J)(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=Object(P.a)(t);return this.tween(e,(r.local?rt:it)(r,n))},style:function(t,n,e){var r="transform"==(t+="")?q:W;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var u=Object(gt.b)(this,t),o=(this.style.removeProperty(t),Object(gt.b)(this,t));return u===o?null:u===e&&o===r?i:i=n(e=u,r=o)}}(t,r)).on("end.style."+t,vt(t)):"function"==typeof n?this.styleTween(t,function(t,n,e){var r,i,u;return function(){var o=Object(gt.b)(this,t),a=e(this),c=a+"";return null==a&&(this.style.removeProperty(t),c=a=Object(gt.b)(this,t)),o===c?null:o===r&&c===i?u:(i=c,u=n(r=o,a))}}(t,r,V(this,"style."+t,n))).each(function(t,n){var e,r,i,u,o="style."+n,a="end."+o;return function(){var c=T(this,t),f=c.on,s=null==c.value[o]?u||(u=vt(n)):void 0;f===e&&i===s||(r=(e=f).copy()).on(a,i=s),c.on=r}}(this._id,t)):this.styleTween(t,function(t,n,e){var r,i,u=e+"";return function(){var o=Object(gt.b)(this,t);return o===u?null:o===r?i:i=n(r=o,e)}}(t,r,n),e).on("end.style."+t,null)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,yt(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(V(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var n="text";if(arguments.length<1)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;return this.tween(n,wt(t))},remove:function(){return this.on("end.remove",(t=this._id,function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}));var t},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=N(this.node(),e).tween,u=0,o=i.length;u<o;++u)if((r=i[u]).name===t)return r.value;return null}return this.each((null==n?L:X)(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?ut:ot)(n,t)):N(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?at:ct)(n,t)):N(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(ft(n,t)):N(this.node(),n).ease},end:function(){var t,n,e=this,r=e._id,i=e.size();return new Promise((function(u,o){var a={value:o},c={value:function(){0==--i&&u()}};e.each((function(){var e=T(this,r),i=e.on;i!==t&&((n=(t=i).copy())._.cancel.push(a),n._.interrupt.push(a),n._.end.push(c)),e.on=n}))}))}};var jt={time:null,delay:0,duration:250,ease:e(23).b};function Tt(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return jt.time=g(),jt;return e}u.b.prototype.interrupt=function(t){return this.each((function(){z(this,t)}))},u.b.prototype.transition=function(t){var n,e;t instanceof Mt?(n=t._id,t=t._name):(n=Ot(),(e=jt).time=g(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],c=a.length,f=0;f<c;++f)(o=a[f])&&k(o,t,n,f,a,e||Tt(o,n));return new Mt(r,this._parents,t,n)};var Nt=[null],St=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>1&&e.name===n)return new Mt([[t]],Nt,n,+r);return null}},,function(t,n,e){"use strict";e.r(n);var r=e(0);e.d(n,"timeInterval",(function(){return r.a}));var i=e(25);e.d(n,"timeMillisecond",(function(){return i.a})),e.d(n,"timeMilliseconds",(function(){return i.b})),e.d(n,"utcMillisecond",(function(){return i.a})),e.d(n,"utcMilliseconds",(function(){return i.b}));var u=e(24);e.d(n,"timeSecond",(function(){return u.a})),e.d(n,"timeSeconds",(function(){return u.b})),e.d(n,"utcSecond",(function(){return u.a})),e.d(n,"utcSeconds",(function(){return u.b}));var o=e(37);e.d(n,"timeMinute",(function(){return o.a})),e.d(n,"timeMinutes",(function(){return o.b}));var a=e(36);e.d(n,"timeHour",(function(){return a.a})),e.d(n,"timeHours",(function(){return a.b}));var c=e(26);e.d(n,"timeDay",(function(){return c.b})),e.d(n,"timeDays",(function(){return c.a}));var f=e(3);e.d(n,"timeWeek",(function(){return f.g})),e.d(n,"timeWeeks",(function(){return f.h})),e.d(n,"timeSunday",(function(){return f.g})),e.d(n,"timeSundays",(function(){return f.h})),e.d(n,"timeMonday",(function(){return f.c})),e.d(n,"timeMondays",(function(){return f.d})),e.d(n,"timeTuesday",(function(){return f.k})),e.d(n,"timeTuesdays",(function(){return f.l})),e.d(n,"timeWednesday",(function(){return f.m})),e.d(n,"timeWednesdays",(function(){return f.n})),e.d(n,"timeThursday",(function(){return f.i})),e.d(n,"timeThursdays",(function(){return f.j})),e.d(n,"timeFriday",(function(){return f.a})),e.d(n,"timeFridays",(function(){return f.b})),e.d(n,"timeSaturday",(function(){return f.e})),e.d(n,"timeSaturdays",(function(){return f.f}));var s=e(35);e.d(n,"timeMonth",(function(){return s.a})),e.d(n,"timeMonths",(function(){return s.b}));var l=e(14);e.d(n,"timeYear",(function(){return l.a})),e.d(n,"timeYears",(function(){return l.b}));var h=e(40);e.d(n,"utcMinute",(function(){return h.a})),e.d(n,"utcMinutes",(function(){return h.b}));var d=e(39);e.d(n,"utcHour",(function(){return d.a})),e.d(n,"utcHours",(function(){return d.b}));var p=e(27);e.d(n,"utcDay",(function(){return p.a})),e.d(n,"utcDays",(function(){return p.b}));var g=e(4);e.d(n,"utcWeek",(function(){return g.g})),e.d(n,"utcWeeks",(function(){return g.h})),e.d(n,"utcSunday",(function(){return g.g})),e.d(n,"utcSundays",(function(){return g.h})),e.d(n,"utcMonday",(function(){return g.c})),e.d(n,"utcMondays",(function(){return g.d})),e.d(n,"utcTuesday",(function(){return g.k})),e.d(n,"utcTuesdays",(function(){return g.l})),e.d(n,"utcWednesday",(function(){return g.m})),e.d(n,"utcWednesdays",(function(){return g.n})),e.d(n,"utcThursday",(function(){return g.i})),e.d(n,"utcThursdays",(function(){return g.j})),e.d(n,"utcFriday",(function(){return g.a})),e.d(n,"utcFridays",(function(){return g.b})),e.d(n,"utcSaturday",(function(){return g.e})),e.d(n,"utcSaturdays",(function(){return g.f}));var v=e(38);e.d(n,"utcMonth",(function(){return v.a})),e.d(n,"utcMonths",(function(){return v.b}));var m=e(15);e.d(n,"utcYear",(function(){return m.a})),e.d(n,"utcYears",(function(){return m.b}))},function(t,n,e){"use strict";function r(){return[]}n.a=function(t){return null==t?r:function(){return this.querySelectorAll(t)}}},function(t,n,e){"use strict";n.a=function(t){return function(){return this.matches(t)}}},function(t,n,e){"use strict";e.d(n,"b",(function(){return a}));var r=e(18);function i(t){return function(){this.style.removeProperty(t)}}function u(t,n,e){return function(){this.style.setProperty(t,n,e)}}function o(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function a(t,n){return t.style.getPropertyValue(n)||Object(r.a)(t).getComputedStyle(t,null).getPropertyValue(n)}n.a=function(t,n,e){return arguments.length>1?this.each((null==n?i:"function"==typeof n?o:u)(t,n,null==e?"":e)):a(this.node(),t)}},function(t,n,e){"use strict";e.d(n,"a",(function(){return h}));var r=e(4),i=e(27),u=e(3),o=e(26),a=e(14),c=e(15);function f(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function s(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function l(t,n,e){return{y:t,m:n,d:e,H:0,M:0,S:0,L:0}}function h(t){var n=t.dateTime,e=t.date,a=t.time,c=t.periods,h=t.days,p=t.shortDays,g=t.months,v=t.shortMonths,m=b(c),y=w(c),Ot=b(h),kt=w(h),jt=b(p),Tt=w(p),Nt=b(g),St=w(g),At=b(v),Ct=w(v),Dt={a:function(t){return p[t.getDay()]},A:function(t){return h[t.getDay()]},b:function(t){return v[t.getMonth()]},B:function(t){return g[t.getMonth()]},c:null,d:P,e:P,f:$,H:L,I:X,j:V,L:B,m:R,M:W,p:function(t){return c[+(t.getHours()>=12)]},q:function(t){return 1+~~(t.getMonth()/3)},Q:Mt,s:xt,S:Z,u:Q,U:J,V:G,w:K,W:tt,x:null,X:null,y:nt,Y:et,Z:rt,"%":_t},zt={a:function(t){return p[t.getUTCDay()]},A:function(t){return h[t.getUTCDay()]},b:function(t){return v[t.getUTCMonth()]},B:function(t){return g[t.getUTCMonth()]},c:null,d:it,e:it,f:ft,H:ut,I:ot,j:at,L:ct,m:st,M:lt,p:function(t){return c[+(t.getUTCHours()>=12)]},q:function(t){return 1+~~(t.getUTCMonth()/3)},Q:Mt,s:xt,S:ht,u:dt,U:pt,V:gt,w:vt,W:mt,x:null,X:null,y:yt,Y:bt,Z:wt,"%":_t},Ut={a:function(t,n,e){var r=jt.exec(n.slice(e));return r?(t.w=Tt[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=Ot.exec(n.slice(e));return r?(t.w=kt[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=At.exec(n.slice(e));return r?(t.m=Ct[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=Nt.exec(n.slice(e));return r?(t.m=St[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return Yt(t,n,e,r)},d:C,e:C,f:Y,H:z,I:z,j:D,L:F,m:A,M:U,p:function(t,n,e){var r=m.exec(n.slice(e));return r?(t.p=y[r[0].toLowerCase()],e+r[0].length):-1},q:S,Q:q,s:H,S:E,u:M,U:x,V:O,w:_,W:k,x:function(t,n,r){return Yt(t,e,n,r)},X:function(t,n,e){return Yt(t,a,n,e)},y:T,Y:j,Z:N,"%":I};function Et(t,n){return function(e){var r,i,u,o=[],a=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++a<f;)37===t.charCodeAt(a)&&(o.push(t.slice(c,a)),null!=(i=d[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(u=n[r])&&(r=u(e,i)),o.push(r),c=a+1);return o.push(t.slice(c,a)),o.join("")}}function Ft(t,n){return function(e){var a,c,h=l(1900,void 0,1);if(Yt(h,t,e+="",0)!=e.length)return null;if("Q"in h)return new Date(h.Q);if("s"in h)return new Date(1e3*h.s+("L"in h?h.L:0));if(n&&!("Z"in h)&&(h.Z=0),"p"in h&&(h.H=h.H%12+12*h.p),void 0===h.m&&(h.m="q"in h?h.q:0),"V"in h){if(h.V<1||h.V>53)return null;"w"in h||(h.w=1),"Z"in h?(c=(a=s(l(h.y,0,1))).getUTCDay(),a=c>4||0===c?r.c.ceil(a):Object(r.c)(a),a=i.a.offset(a,7*(h.V-1)),h.y=a.getUTCFullYear(),h.m=a.getUTCMonth(),h.d=a.getUTCDate()+(h.w+6)%7):(c=(a=f(l(h.y,0,1))).getDay(),a=c>4||0===c?u.c.ceil(a):Object(u.c)(a),a=o.b.offset(a,7*(h.V-1)),h.y=a.getFullYear(),h.m=a.getMonth(),h.d=a.getDate()+(h.w+6)%7)}else("W"in h||"U"in h)&&("w"in h||(h.w="u"in h?h.u%7:"W"in h?1:0),c="Z"in h?s(l(h.y,0,1)).getUTCDay():f(l(h.y,0,1)).getDay(),h.m=0,h.d="W"in h?(h.w+6)%7+7*h.W-(c+5)%7:h.w+7*h.U-(c+6)%7);return"Z"in h?(h.H+=h.Z/100|0,h.M+=h.Z%100,s(h)):f(h)}}function Yt(t,n,e,r){for(var i,u,o=0,a=n.length,c=e.length;o<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(o++))){if(i=n.charAt(o++),!(u=Ut[i in d?n.charAt(o++):i])||(r=u(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return Dt.x=Et(e,Dt),Dt.X=Et(a,Dt),Dt.c=Et(n,Dt),zt.x=Et(e,zt),zt.X=Et(a,zt),zt.c=Et(n,zt),{format:function(t){var n=Et(t+="",Dt);return n.toString=function(){return t},n},parse:function(t){var n=Ft(t+="",!1);return n.toString=function(){return t},n},utcFormat:function(t){var n=Et(t+="",zt);return n.toString=function(){return t},n},utcParse:function(t){var n=Ft(t+="",!0);return n.toString=function(){return t},n}}}var d={"-":"",_:" ",0:"0"},p=/^\s*\d+/,g=/^%/,v=/[\\^$*+?|[\]().{}]/g;function m(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",u=i.length;return r+(u<e?new Array(e-u+1).join(n)+i:i)}function y(t){return t.replace(v,"\\$&")}function b(t){return new RegExp("^(?:"+t.map(y).join("|")+")","i")}function w(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function _(t,n,e){var r=p.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function M(t,n,e){var r=p.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function x(t,n,e){var r=p.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function O(t,n,e){var r=p.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function k(t,n,e){var r=p.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function j(t,n,e){var r=p.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function T(t,n,e){var r=p.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function N(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function S(t,n,e){var r=p.exec(n.slice(e,e+1));return r?(t.q=3*r[0]-3,e+r[0].length):-1}function A(t,n,e){var r=p.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function C(t,n,e){var r=p.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function D(t,n,e){var r=p.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function z(t,n,e){var r=p.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function U(t,n,e){var r=p.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function E(t,n,e){var r=p.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function F(t,n,e){var r=p.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Y(t,n,e){var r=p.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function I(t,n,e){var r=g.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function q(t,n,e){var r=p.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function H(t,n,e){var r=p.exec(n.slice(e));return r?(t.s=+r[0],e+r[0].length):-1}function P(t,n){return m(t.getDate(),n,2)}function L(t,n){return m(t.getHours(),n,2)}function X(t,n){return m(t.getHours()%12||12,n,2)}function V(t,n){return m(1+o.b.count(Object(a.a)(t),t),n,3)}function B(t,n){return m(t.getMilliseconds(),n,3)}function $(t,n){return B(t,n)+"000"}function R(t,n){return m(t.getMonth()+1,n,2)}function W(t,n){return m(t.getMinutes(),n,2)}function Z(t,n){return m(t.getSeconds(),n,2)}function Q(t){var n=t.getDay();return 0===n?7:n}function J(t,n){return m(u.g.count(Object(a.a)(t)-1,t),n,2)}function G(t,n){var e=t.getDay();return t=e>=4||0===e?Object(u.i)(t):u.i.ceil(t),m(u.i.count(Object(a.a)(t),t)+(4===Object(a.a)(t).getDay()),n,2)}function K(t){return t.getDay()}function tt(t,n){return m(u.c.count(Object(a.a)(t)-1,t),n,2)}function nt(t,n){return m(t.getFullYear()%100,n,2)}function et(t,n){return m(t.getFullYear()%1e4,n,4)}function rt(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+m(n/60|0,"0",2)+m(n%60,"0",2)}function it(t,n){return m(t.getUTCDate(),n,2)}function ut(t,n){return m(t.getUTCHours(),n,2)}function ot(t,n){return m(t.getUTCHours()%12||12,n,2)}function at(t,n){return m(1+i.a.count(Object(c.a)(t),t),n,3)}function ct(t,n){return m(t.getUTCMilliseconds(),n,3)}function ft(t,n){return ct(t,n)+"000"}function st(t,n){return m(t.getUTCMonth()+1,n,2)}function lt(t,n){return m(t.getUTCMinutes(),n,2)}function ht(t,n){return m(t.getUTCSeconds(),n,2)}function dt(t){var n=t.getUTCDay();return 0===n?7:n}function pt(t,n){return m(r.g.count(Object(c.a)(t)-1,t),n,2)}function gt(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Object(r.i)(t):r.i.ceil(t),m(r.i.count(Object(c.a)(t),t)+(4===Object(c.a)(t).getUTCDay()),n,2)}function vt(t){return t.getUTCDay()}function mt(t,n){return m(r.c.count(Object(c.a)(t)-1,t),n,2)}function yt(t,n){return m(t.getUTCFullYear()%100,n,2)}function bt(t,n){return m(t.getUTCFullYear()%1e4,n,4)}function wt(){return"+0000"}function _t(){return"%"}function Mt(t){return+t}function xt(t){return Math.floor(+t/1e3)}},function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var r=e(0),i=Object(r.a)((function(t){t.setDate(1),t.setHours(0,0,0,0)}),(function(t,n){t.setMonth(t.getMonth()+n)}),(function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())}),(function(t){return t.getMonth()}));n.a=i;var u=i.range},function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var r=e(0),i=e(2),u=Object(r.a)((function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*i.d-t.getMinutes()*i.c)}),(function(t,n){t.setTime(+t+n*i.b)}),(function(t,n){return(n-t)/i.b}),(function(t){return t.getHours()}));n.a=u;var o=u.range},function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var r=e(0),i=e(2),u=Object(r.a)((function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*i.d)}),(function(t,n){t.setTime(+t+n*i.c)}),(function(t,n){return(n-t)/i.c}),(function(t){return t.getMinutes()}));n.a=u;var o=u.range},function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var r=e(0),i=Object(r.a)((function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCMonth(t.getUTCMonth()+n)}),(function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())}),(function(t){return t.getUTCMonth()}));n.a=i;var u=i.range},function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var r=e(0),i=e(2),u=Object(r.a)((function(t){t.setUTCMinutes(0,0,0)}),(function(t,n){t.setTime(+t+n*i.b)}),(function(t,n){return(n-t)/i.b}),(function(t){return t.getUTCHours()}));n.a=u;var o=u.range},function(t,n,e){"use strict";e.d(n,"b",(function(){return o}));var r=e(0),i=e(2),u=Object(r.a)((function(t){t.setUTCSeconds(0,0)}),(function(t,n){t.setTime(+t+n*i.c)}),(function(t,n){return(n-t)/i.c}),(function(t){return t.getUTCMinutes()}));n.a=u;var o=u.range},function(t,n,e){"use strict";e.r(n),e.d(n,"timeFormatDefaultLocale",(function(){return r.a})),e.d(n,"timeFormat",(function(){return r.b})),e.d(n,"timeParse",(function(){return r.c})),e.d(n,"utcFormat",(function(){return r.d})),e.d(n,"utcParse",(function(){return r.e})),e.d(n,"timeFormatLocale",(function(){return i.a})),e.d(n,"isoFormat",(function(){return u})),e.d(n,"isoParse",(function(){return o}));var r=e(8),i=e(34);var u=Date.prototype.toISOString?function(t){return t.toISOString()}:Object(r.d)("%Y-%m-%dT%H:%M:%S.%LZ");var o=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:Object(r.e)("%Y-%m-%dT%H:%M:%S.%LZ")},function(t,n,e){"use strict";var r=e(66);function i(t,n,e,r,i){var u=t*t,o=u*t;return((1-3*t+3*u-o)*n+(4-6*u+3*o)*e+(1+3*t+3*u-3*o)*r+o*i)/6}var u=e(22);function o(t,n){return function(e){return t+e*n}}function a(t){return 1==(t=+t)?c:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Object(u.a)(isNaN(n)?e:n)}}function c(t,n){var e=n-t;return e?o(t,e):Object(u.a)(isNaN(t)?n:t)}n.a=function t(n){var e=a(n);function i(t,n){var i=e((t=Object(r.b)(t)).r,(n=Object(r.b)(n)).r),u=e(t.g,n.g),o=e(t.b,n.b),a=c(t.opacity,n.opacity);return function(n){return t.r=i(n),t.g=u(n),t.b=o(n),t.opacity=a(n),t+""}}return i.gamma=t,i}(1);function f(t){return function(n){var e,i,u=n.length,o=new Array(u),a=new Array(u),c=new Array(u);for(e=0;e<u;++e)i=Object(r.b)(n[e]),o[e]=i.r||0,a[e]=i.g||0,c[e]=i.b||0;return o=t(o),a=t(a),c=t(c),i.opacity=1,function(t){return i.r=o(t),i.g=a(t),i.b=c(t),i+""}}}f((function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),u=t[r],o=t[r+1],a=r>0?t[r-1]:2*u-o,c=r<n-1?t[r+2]:2*o-u;return i((e-r/n)*n,a,u,o,c)}})),f((function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),u=t[(r+n-1)%n],o=t[r%n],a=t[(r+1)%n],c=t[(r+2)%n];return i((e-r/n)*n,u,o,a,c)}}))},,,function(t,n,e){"use strict";var r=e(21),i=e(12);n.a=function(t){var n=Object(r.a)();return n.changedTouches&&(n=n.changedTouches[0]),Object(i.a)(t,n)}},function(t,n,e){"use strict";var r=e(21),i=e(12);n.a=function(t,n,e){arguments.length<3&&(e=n,n=Object(r.a)().changedTouches);for(var u,o=0,a=n?n.length:0;o<a;++o)if((u=n[o]).identifier===e)return Object(i.a)(t,u);return null}},function(t,n,e){"use strict";function r(t){return+t}function i(t){return t*t}function u(t){return t*(2-t)}function o(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}e.r(n),e.d(n,"easeLinear",(function(){return r})),e.d(n,"easeQuad",(function(){return o})),e.d(n,"easeQuadIn",(function(){return i})),e.d(n,"easeQuadOut",(function(){return u})),e.d(n,"easeQuadInOut",(function(){return o})),e.d(n,"easeCubic",(function(){return a.b})),e.d(n,"easeCubicIn",(function(){return a.a})),e.d(n,"easeCubicOut",(function(){return a.c})),e.d(n,"easeCubicInOut",(function(){return a.b})),e.d(n,"easePoly",(function(){return s})),e.d(n,"easePolyIn",(function(){return c})),e.d(n,"easePolyOut",(function(){return f})),e.d(n,"easePolyInOut",(function(){return s})),e.d(n,"easeSin",(function(){return g})),e.d(n,"easeSinIn",(function(){return d})),e.d(n,"easeSinOut",(function(){return p})),e.d(n,"easeSinInOut",(function(){return g})),e.d(n,"easeExp",(function(){return y})),e.d(n,"easeExpIn",(function(){return v})),e.d(n,"easeExpOut",(function(){return m})),e.d(n,"easeExpInOut",(function(){return y})),e.d(n,"easeCircle",(function(){return _})),e.d(n,"easeCircleIn",(function(){return b})),e.d(n,"easeCircleOut",(function(){return w})),e.d(n,"easeCircleInOut",(function(){return _})),e.d(n,"easeBounce",(function(){return O})),e.d(n,"easeBounceIn",(function(){return x})),e.d(n,"easeBounceOut",(function(){return O})),e.d(n,"easeBounceInOut",(function(){return k})),e.d(n,"easeBack",(function(){return N})),e.d(n,"easeBackIn",(function(){return j})),e.d(n,"easeBackOut",(function(){return T})),e.d(n,"easeBackInOut",(function(){return N})),e.d(n,"easeElastic",(function(){return C})),e.d(n,"easeElasticIn",(function(){return A})),e.d(n,"easeElasticOut",(function(){return C})),e.d(n,"easeElasticInOut",(function(){return D}));var a=e(23),c=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),f=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),s=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),l=Math.PI,h=l/2;function d(t){return 1-Math.cos(t*h)}function p(t){return Math.sin(t*h)}function g(t){return(1-Math.cos(l*t))/2}function v(t){return Math.pow(2,10*t-10)}function m(t){return 1-Math.pow(2,-10*t)}function y(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function b(t){return 1-Math.sqrt(1-t*t)}function w(t){return Math.sqrt(1- --t*t)}function _(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var M=7.5625;function x(t){return 1-O(1-t)}function O(t){return(t=+t)<4/11?M*t*t:t<8/11?M*(t-=6/11)*t+3/4:t<10/11?M*(t-=9/11)*t+15/16:M*(t-=21/22)*t+63/64}function k(t){return((t*=2)<=1?1-O(1-t):O(t-1)+1)/2}var j=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),T=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),N=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),S=2*Math.PI,A=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=S);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*S)},i.period=function(e){return t(n,e)},i}(1,.3),C=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=S);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*S)},i.period=function(e){return t(n,e)},i}(1,.3),D=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=S);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*S)},i.period=function(e){return t(n,e)},i}(1,.3)},function(t,n,e){"use strict";e.r(n),e.d(n,"drag",(function(){return v})),e.d(n,"dragDisable",(function(){return c.a})),e.d(n,"dragEnable",(function(){return c.b}));var r=e(65),i=e(9),u=e(45),o=e(20),a=e(46),c=e(19),f=e(7),s=function(t){return function(){return t}};function l(t,n,e,r,i,u,o,a,c,f){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=u,this.y=o,this.dx=a,this.dy=c,this._=f}function h(){return!i.c.ctrlKey&&!i.c.button}function d(){return this.parentNode}function p(t){return null==t?{x:i.c.x,y:i.c.y}:t}function g(){return navigator.maxTouchPoints||"ontouchstart"in this}l.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var v=function(){var t,n,e,v,m=h,y=d,b=p,w=g,_={},M=Object(r.a)("start","drag","end"),x=0,O=0;function k(t){t.on("mousedown.drag",j).filter(w).on("touchstart.drag",S).on("touchmove.drag",A).on("touchend.drag touchcancel.drag",C).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function j(){if(!v&&m.apply(this,arguments)){var r=D("mouse",y.apply(this,arguments),u.a,this,arguments);r&&(Object(o.a)(i.c.view).on("mousemove.drag",T,!0).on("mouseup.drag",N,!0),Object(c.a)(i.c.view),Object(f.b)(),e=!1,t=i.c.clientX,n=i.c.clientY,r("start"))}}function T(){if(Object(f.a)(),!e){var r=i.c.clientX-t,u=i.c.clientY-n;e=r*r+u*u>O}_.mouse("drag")}function N(){Object(o.a)(i.c.view).on("mousemove.drag mouseup.drag",null),Object(c.b)(i.c.view,e),Object(f.a)(),_.mouse("end")}function S(){if(m.apply(this,arguments)){var t,n,e=i.c.changedTouches,r=y.apply(this,arguments),u=e.length;for(t=0;t<u;++t)(n=D(e[t].identifier,r,a.a,this,arguments))&&(Object(f.b)(),n("start"))}}function A(){var t,n,e=i.c.changedTouches,r=e.length;for(t=0;t<r;++t)(n=_[e[t].identifier])&&(Object(f.a)(),n("drag"))}function C(){var t,n,e=i.c.changedTouches,r=e.length;for(v&&clearTimeout(v),v=setTimeout((function(){v=null}),500),t=0;t<r;++t)(n=_[e[t].identifier])&&(Object(f.b)(),n("end"))}function D(t,n,e,r,u){var o,a,c,f=e(n,t),s=M.copy();if(Object(i.a)(new l(k,"beforestart",o,t,x,f[0],f[1],0,0,s),(function(){return null!=(i.c.subject=o=b.apply(r,u))&&(a=o.x-f[0]||0,c=o.y-f[1]||0,!0)})))return function h(d){var p,g=f;switch(d){case"start":_[t]=h,p=x++;break;case"end":delete _[t],--x;case"drag":f=e(n,t),p=x}Object(i.a)(new l(k,d,o,t,p,f[0]+a,f[1]+c,f[0]-g[0],f[1]-g[1],s),s.apply,s,[d,r,u])}}return k.filter=function(t){return arguments.length?(m="function"==typeof t?t:s(!!t),k):m},k.container=function(t){return arguments.length?(y="function"==typeof t?t:s(t),k):y},k.subject=function(t){return arguments.length?(b="function"==typeof t?t:s(t),k):b},k.touchable=function(t){return arguments.length?(w="function"==typeof t?t:s(!!t),k):w},k.on=function(){var t=M.on.apply(M,arguments);return t===M?k:t},k.clickDistance=function(t){return arguments.length?(O=(t=+t)*t,k):Math.sqrt(O)},k}},function(t,n,e){"use strict";var r=e(6),i=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,u=new RegExp(i.source,"g");n.a=function(t,n){var e,o,a,c=i.lastIndex=u.lastIndex=0,f=-1,s=[],l=[];for(t+="",n+="";(e=i.exec(t))&&(o=u.exec(n));)(a=o.index)>c&&(a=n.slice(c,a),s[f]?s[f]+=a:s[++f]=a),(e=e[0])===(o=o[0])?s[f]?s[f]+=o:s[++f]=o:(s[++f]=null,l.push({i:f,x:Object(r.a)(e,o)})),c=u.lastIndex;return c<n.length&&(a=n.slice(c),s[f]?s[f]+=a:s[++f]=a),s.length<2?l[0]?function(t){return function(n){return t(n)+""}}(l[0].x):function(t){return function(){return t}}(n):(n=l.length,function(t){for(var e,r=0;r<n;++r)s[(e=l[r]).i]=e.x(t);return s.join("")})}},,,,,,,,,,,,,function(t,n,e){"use strict";e.r(n),e.d(n,"scaleBand",(function(){return m})),e.d(n,"scalePoint",(function(){return b})),e.d(n,"scaleIdentity",(function(){return ut})),e.d(n,"scaleLinear",(function(){return it})),e.d(n,"scaleLog",(function(){return pt})),e.d(n,"scaleSymlog",(function(){return yt})),e.d(n,"scaleOrdinal",(function(){return v})),e.d(n,"scaleImplicit",(function(){return g})),e.d(n,"scalePow",(function(){return xt})),e.d(n,"scaleSqrt",(function(){return Ot})),e.d(n,"scaleQuantile",(function(){return kt})),e.d(n,"scaleQuantize",(function(){return jt})),e.d(n,"scaleThreshold",(function(){return Tt})),e.d(n,"scaleTime",(function(){return Ht})),e.d(n,"scaleUtc",(function(){return Rt})),e.d(n,"scaleSequential",(function(){return Qt})),e.d(n,"scaleSequentialLog",(function(){return Jt})),e.d(n,"scaleSequentialPow",(function(){return Kt})),e.d(n,"scaleSequentialSqrt",(function(){return tn})),e.d(n,"scaleSequentialSymlog",(function(){return Gt})),e.d(n,"scaleSequentialQuantile",(function(){return nn})),e.d(n,"scaleDiverging",(function(){return rn})),e.d(n,"scaleDivergingLog",(function(){return un})),e.d(n,"scaleDivergingPow",(function(){return an})),e.d(n,"scaleDivergingSqrt",(function(){return cn})),e.d(n,"scaleDivergingSymlog",(function(){return on})),e.d(n,"tickFormat",(function(){return et}));var r=e(1);function i(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}function u(t,n){switch(arguments.length){case 0:break;case 1:this.interpolator(t);break;default:this.interpolator(n).domain(t)}return this}function o(){}function a(t,n){var e=new o;if(t instanceof o)t.each((function(t,n){e.set(n,t)}));else if(Array.isArray(t)){var r,i=-1,u=t.length;if(null==n)for(;++i<u;)e.set(i,t[i]);else for(;++i<u;)e.set(n(r=t[i],i,t),r)}else if(t)for(var a in t)e.set(a,t[a]);return e}o.prototype=a.prototype={constructor:o,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var c=a;function f(){}var s=c.prototype;function l(t,n){var e=new f;if(t instanceof f)t.each((function(t){e.add(t)}));else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}f.prototype=l.prototype={constructor:f,has:s.has,add:function(t){return this["$"+(t+="")]=t,this},remove:s.remove,clear:s.clear,values:s.keys,size:s.size,empty:s.empty,each:s.each};var h=Array.prototype,d=h.map,p=h.slice,g={name:"implicit"};function v(){var t=c(),n=[],e=[],r=g;function u(i){var u=i+"",o=t.get(u);if(!o){if(r!==g)return r;t.set(u,o=n.push(i))}return e[(o-1)%e.length]}return u.domain=function(e){if(!arguments.length)return n.slice();n=[],t=c();for(var r,i,o=-1,a=e.length;++o<a;)t.has(i=(r=e[o])+"")||t.set(i,n.push(r));return u},u.range=function(t){return arguments.length?(e=p.call(t),u):e.slice()},u.unknown=function(t){return arguments.length?(r=t,u):r},u.copy=function(){return v(n,e).unknown(r)},i.apply(u,arguments),u}function m(){var t,n,e=v().unknown(void 0),u=e.domain,o=e.range,a=[0,1],c=!1,f=0,s=0,l=.5;function h(){var e=u().length,i=a[1]<a[0],h=a[i-0],d=a[1-i];t=(d-h)/Math.max(1,e-f+2*s),c&&(t=Math.floor(t)),h+=(d-h-t*(e-f))*l,n=t*(1-f),c&&(h=Math.round(h),n=Math.round(n));var p=Object(r.range)(e).map((function(n){return h+t*n}));return o(i?p.reverse():p)}return delete e.unknown,e.domain=function(t){return arguments.length?(u(t),h()):u()},e.range=function(t){return arguments.length?(a=[+t[0],+t[1]],h()):a.slice()},e.rangeRound=function(t){return a=[+t[0],+t[1]],c=!0,h()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(c=!!t,h()):c},e.padding=function(t){return arguments.length?(f=Math.min(1,s=+t),h()):f},e.paddingInner=function(t){return arguments.length?(f=Math.min(1,t),h()):f},e.paddingOuter=function(t){return arguments.length?(s=+t,h()):s},e.align=function(t){return arguments.length?(l=Math.max(0,Math.min(1,t)),h()):l},e.copy=function(){return m(u(),a).round(c).paddingInner(f).paddingOuter(s).align(l)},i.apply(h(),arguments)}function y(t){var n=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return y(n())},t}function b(){return y(m.apply(null,arguments).paddingInner(1))}var w=e(66),_=e(42),M=function(t,n){n||(n=[]);var e,r=t?Math.min(n.length,t.length):0,i=n.slice();return function(u){for(e=0;e<r;++e)i[e]=t[e]*(1-u)+n[e]*u;return i}};function x(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function O(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,u=new Array(i),o=new Array(r);for(e=0;e<i;++e)u[e]=A(t[e],n[e]);for(;e<r;++e)o[e]=n[e];return function(t){for(e=0;e<i;++e)o[e]=u[e](t);return o}}var k=function(t,n){var e=new Date;return t=+t,n=+n,function(r){return e.setTime(t*(1-r)+n*r),e}},j=e(6),T=function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=A(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},N=e(49),S=e(22),A=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?Object(S.a)(n):("number"===r?j.a:"string"===r?(e=Object(w.a)(n))?(n=e,_.a):N.a:n instanceof w.a?_.a:n instanceof Date?k:x(n)?M:Array.isArray(n)?O:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?T:j.a)(t,n)},C=function(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}},D=function(t){return+t},z=[0,1];function U(t){return t}function E(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:(e=isNaN(n)?NaN:.5,function(){return e});var e}function F(t){var n,e=t[0],r=t[t.length-1];return e>r&&(n=e,e=r,r=n),function(t){return Math.max(e,Math.min(r,t))}}function Y(t,n,e){var r=t[0],i=t[1],u=n[0],o=n[1];return i<r?(r=E(i,r),u=e(o,u)):(r=E(r,i),u=e(u,o)),function(t){return u(r(t))}}function I(t,n,e){var i=Math.min(t.length,n.length)-1,u=new Array(i),o=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)u[a]=E(t[a],t[a+1]),o[a]=e(n[a],n[a+1]);return function(n){var e=Object(r.bisect)(t,n,1,i)-1;return o[e](u[e](n))}}function q(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function H(){var t,n,e,r,i,u,o=z,a=z,c=A,f=U;function s(){return r=Math.min(o.length,a.length)>2?I:Y,i=u=null,l}function l(n){return isNaN(n=+n)?e:(i||(i=r(o.map(t),a,c)))(t(f(n)))}return l.invert=function(e){return f(n((u||(u=r(a,o.map(t),j.a)))(e)))},l.domain=function(t){return arguments.length?(o=d.call(t,D),f===U||(f=F(o)),s()):o.slice()},l.range=function(t){return arguments.length?(a=p.call(t),s()):a.slice()},l.rangeRound=function(t){return a=p.call(t),c=C,s()},l.clamp=function(t){return arguments.length?(f=t?F(o):U,l):f!==U},l.interpolate=function(t){return arguments.length?(c=t,s()):c},l.unknown=function(t){return arguments.length?(e=t,l):e},function(e,r){return t=e,n=r,s()}}function P(t,n){return H()(t,n)}var L=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function X(t){if(!(n=L.exec(t)))throw new Error("invalid format: "+t);var n;return new V({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function V(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}X.prototype=V.prototype,V.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var B,$,R,W,Z=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},Q=function(t){return(t=Z(Math.abs(t)))?t[1]:NaN},J=function(t,n){var e=Z(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},G={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return J(100*t,n)},r:J,s:function(t,n){var e=Z(t,n);if(!e)return t+"";var r=e[0],i=e[1],u=i-(B=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,o=r.length;return u===o?r:u>o?r+new Array(u-o+1).join("0"):u>0?r.slice(0,u)+"."+r.slice(u):"0."+new Array(1-u).join("0")+Z(t,Math.max(0,n+u-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},K=function(t){return t},tt=Array.prototype.map,nt=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];$=function(t){var n,e,r=void 0===t.grouping||void 0===t.thousands?K:(n=tt.call(t.grouping,Number),e=t.thousands+"",function(t,r){for(var i=t.length,u=[],o=0,a=n[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),u.push(t.substring(i-=a,i+a)),!((c+=a+1)>r));)a=n[o=(o+1)%n.length];return u.reverse().join(e)}),i=void 0===t.currency?"":t.currency[0]+"",u=void 0===t.currency?"":t.currency[1]+"",o=void 0===t.decimal?".":t.decimal+"",a=void 0===t.numerals?K:function(t){return function(n){return n.replace(/[0-9]/g,(function(n){return t[+n]}))}}(tt.call(t.numerals,String)),c=void 0===t.percent?"%":t.percent+"",f=void 0===t.minus?"-":t.minus+"",s=void 0===t.nan?"NaN":t.nan+"";function l(t){var n=(t=X(t)).fill,e=t.align,l=t.sign,h=t.symbol,d=t.zero,p=t.width,g=t.comma,v=t.precision,m=t.trim,y=t.type;"n"===y?(g=!0,y="g"):G[y]||(void 0===v&&(v=12),m=!0,y="g"),(d||"0"===n&&"="===e)&&(d=!0,n="0",e="=");var b="$"===h?i:"#"===h&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",w="$"===h?u:/[%p]/.test(y)?c:"",_=G[y],M=/[defgprs%]/.test(y);function x(t){var i,u,c,h=b,x=w;if("c"===y)x=_(t)+x,t="";else{var O=(t=+t)<0||1/t<0;if(t=isNaN(t)?s:_(Math.abs(t),v),m&&(t=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(!+t[r])break t;i>0&&(i=0)}return i>0?t.slice(0,i)+t.slice(n+1):t}(t)),O&&0==+t&&"+"!==l&&(O=!1),h=(O?"("===l?l:f:"-"===l||"("===l?"":l)+h,x=("s"===y?nt[8+B/3]:"")+x+(O&&"("===l?")":""),M)for(i=-1,u=t.length;++i<u;)if(48>(c=t.charCodeAt(i))||c>57){x=(46===c?o+t.slice(i+1):t.slice(i))+x,t=t.slice(0,i);break}}g&&!d&&(t=r(t,1/0));var k=h.length+t.length+x.length,j=k<p?new Array(p-k+1).join(n):"";switch(g&&d&&(t=r(j+t,j.length?p-x.length:1/0),j=""),e){case"<":t=h+t+x+j;break;case"=":t=h+j+t+x;break;case"^":t=j.slice(0,k=j.length>>1)+h+t+x+j.slice(k);break;default:t=j+h+t+x}return a(t)}return v=void 0===v?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,v)):Math.max(0,Math.min(20,v)),x.toString=function(){return t+""},x}return{format:l,formatPrefix:function(t,n){var e=l(((t=X(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Q(n)/3))),i=Math.pow(10,-r),u=nt[8+r/3];return function(t){return e(i*t)+u}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"}),R=$.format,W=$.formatPrefix;var et=function(t,n,e,i){var u,o=Object(r.tickStep)(t,n,e);switch((i=X(null==i?",f":i)).type){case"s":var a=Math.max(Math.abs(t),Math.abs(n));return null!=i.precision||isNaN(u=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Q(n)/3)))-Q(Math.abs(t)))}(o,a))||(i.precision=u),W(i,a);case"":case"e":case"g":case"p":case"r":null!=i.precision||isNaN(u=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,Q(n)-Q(t))+1}(o,Math.max(Math.abs(t),Math.abs(n))))||(i.precision=u-("e"===i.type));break;case"f":case"%":null!=i.precision||isNaN(u=function(t){return Math.max(0,-Q(Math.abs(t)))}(o))||(i.precision=u-2*("%"===i.type))}return R(i)};function rt(t){var n=t.domain;return t.ticks=function(t){var e=n();return Object(r.ticks)(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return et(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var i,u=n(),o=0,a=u.length-1,c=u[o],f=u[a];return f<c&&(i=c,c=f,f=i,i=o,o=a,a=i),(i=Object(r.tickIncrement)(c,f,e))>0?(c=Math.floor(c/i)*i,f=Math.ceil(f/i)*i,i=Object(r.tickIncrement)(c,f,e)):i<0&&(c=Math.ceil(c*i)/i,f=Math.floor(f*i)/i,i=Object(r.tickIncrement)(c,f,e)),i>0?(u[o]=Math.floor(c/i)*i,u[a]=Math.ceil(f/i)*i,n(u)):i<0&&(u[o]=Math.ceil(c*i)/i,u[a]=Math.floor(f*i)/i,n(u)),t},t}function it(){var t=P(U,U);return t.copy=function(){return q(t,it())},i.apply(t,arguments),rt(t)}function ut(t){var n;function e(t){return isNaN(t=+t)?n:t}return e.invert=e,e.domain=e.range=function(n){return arguments.length?(t=d.call(n,D),e):t.slice()},e.unknown=function(t){return arguments.length?(n=t,e):n},e.copy=function(){return ut(t).unknown(n)},t=arguments.length?d.call(t,D):[0,1],rt(e)}var ot=function(t,n){var e,r=0,i=(t=t.slice()).length-1,u=t[r],o=t[i];return o<u&&(e=r,r=i,i=e,e=u,u=o,o=e),t[r]=n.floor(u),t[i]=n.ceil(o),t};function at(t){return Math.log(t)}function ct(t){return Math.exp(t)}function ft(t){return-Math.log(-t)}function st(t){return-Math.exp(-t)}function lt(t){return isFinite(t)?+("1e"+t):t<0?0:t}function ht(t){return function(n){return-t(-n)}}function dt(t){var n,e,i=t(at,ct),u=i.domain,o=10;function a(){return n=function(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}(o),e=function(t){return 10===t?lt:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}(o),u()[0]<0?(n=ht(n),e=ht(e),t(ft,st)):t(at,ct),i}return i.base=function(t){return arguments.length?(o=+t,a()):o},i.domain=function(t){return arguments.length?(u(t),a()):u()},i.ticks=function(t){var i,a=u(),c=a[0],f=a[a.length-1];(i=f<c)&&(d=c,c=f,f=d);var s,l,h,d=n(c),p=n(f),g=null==t?10:+t,v=[];if(!(o%1)&&p-d<g){if(d=Math.round(d)-1,p=Math.round(p)+1,c>0){for(;d<p;++d)for(l=1,s=e(d);l<o;++l)if(!((h=s*l)<c)){if(h>f)break;v.push(h)}}else for(;d<p;++d)for(l=o-1,s=e(d);l>=1;--l)if(!((h=s*l)<c)){if(h>f)break;v.push(h)}}else v=Object(r.ticks)(d,p,Math.min(p-d,g)).map(e);return i?v.reverse():v},i.tickFormat=function(t,r){if(null==r&&(r=10===o?".0e":","),"function"!=typeof r&&(r=R(r)),t===1/0)return r;null==t&&(t=10);var u=Math.max(1,o*t/i.ticks().length);return function(t){var i=t/e(Math.round(n(t)));return i*o<o-.5&&(i*=o),i<=u?r(t):""}},i.nice=function(){return u(ot(u(),{floor:function(t){return e(Math.floor(n(t)))},ceil:function(t){return e(Math.ceil(n(t)))}}))},i}function pt(){var t=dt(H()).domain([1,10]);return t.copy=function(){return q(t,pt()).base(t.base())},i.apply(t,arguments),t}function gt(t){return function(n){return Math.sign(n)*Math.log1p(Math.abs(n/t))}}function vt(t){return function(n){return Math.sign(n)*Math.expm1(Math.abs(n))*t}}function mt(t){var n=1,e=t(gt(n),vt(n));return e.constant=function(e){return arguments.length?t(gt(n=+e),vt(n)):n},rt(e)}function yt(){var t=mt(H());return t.copy=function(){return q(t,yt()).constant(t.constant())},i.apply(t,arguments)}function bt(t){return function(n){return n<0?-Math.pow(-n,t):Math.pow(n,t)}}function wt(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function _t(t){return t<0?-t*t:t*t}function Mt(t){var n=t(U,U),e=1;function r(){return 1===e?t(U,U):.5===e?t(wt,_t):t(bt(e),bt(1/e))}return n.exponent=function(t){return arguments.length?(e=+t,r()):e},rt(n)}function xt(){var t=Mt(H());return t.copy=function(){return q(t,xt()).exponent(t.exponent())},i.apply(t,arguments),t}function Ot(){return xt.apply(null,arguments).exponent(.5)}function kt(){var t,n=[],e=[],u=[];function o(){var t=0,i=Math.max(1,e.length);for(u=new Array(i-1);++t<i;)u[t-1]=Object(r.quantile)(n,t/i);return a}function a(n){return isNaN(n=+n)?t:e[Object(r.bisect)(u,n)]}return a.invertExtent=function(t){var r=e.indexOf(t);return r<0?[NaN,NaN]:[r>0?u[r-1]:n[0],r<u.length?u[r]:n[n.length-1]]},a.domain=function(t){if(!arguments.length)return n.slice();n=[];for(var e,i=0,u=t.length;i<u;++i)null==(e=t[i])||isNaN(e=+e)||n.push(e);return n.sort(r.ascending),o()},a.range=function(t){return arguments.length?(e=p.call(t),o()):e.slice()},a.unknown=function(n){return arguments.length?(t=n,a):t},a.quantiles=function(){return u.slice()},a.copy=function(){return kt().domain(n).range(e).unknown(t)},i.apply(a,arguments)}function jt(){var t,n=0,e=1,u=1,o=[.5],a=[0,1];function c(n){return n<=n?a[Object(r.bisect)(o,n,0,u)]:t}function f(){var t=-1;for(o=new Array(u);++t<u;)o[t]=((t+1)*e-(t-u)*n)/(u+1);return c}return c.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],f()):[n,e]},c.range=function(t){return arguments.length?(u=(a=p.call(t)).length-1,f()):a.slice()},c.invertExtent=function(t){var r=a.indexOf(t);return r<0?[NaN,NaN]:r<1?[n,o[0]]:r>=u?[o[u-1],e]:[o[r-1],o[r]]},c.unknown=function(n){return arguments.length?(t=n,c):c},c.thresholds=function(){return o.slice()},c.copy=function(){return jt().domain([n,e]).range(a).unknown(t)},i.apply(rt(c),arguments)}function Tt(){var t,n=[.5],e=[0,1],u=1;function o(i){return i<=i?e[Object(r.bisect)(n,i,0,u)]:t}return o.domain=function(t){return arguments.length?(n=p.call(t),u=Math.min(n.length,e.length-1),o):n.slice()},o.range=function(t){return arguments.length?(e=p.call(t),u=Math.min(n.length,e.length-1),o):e.slice()},o.invertExtent=function(t){var r=e.indexOf(t);return[n[r-1],n[r]]},o.unknown=function(n){return arguments.length?(t=n,o):t},o.copy=function(){return Tt().domain(n).range(e).unknown(t)},i.apply(o,arguments)}var Nt=e(14),St=e(35),At=e(3),Ct=e(26),Dt=e(36),zt=e(37),Ut=e(24),Et=e(25),Ft=e(8);function Yt(t){return new Date(t)}function It(t){return t instanceof Date?+t:+new Date(+t)}function qt(t,n,e,i,u,o,a,c,f){var s=P(U,U),l=s.invert,h=s.domain,p=f(".%L"),g=f(":%S"),v=f("%I:%M"),m=f("%I %p"),y=f("%a %d"),b=f("%b %d"),w=f("%B"),_=f("%Y"),M=[[a,1,1e3],[a,5,5e3],[a,15,15e3],[a,30,3e4],[o,1,6e4],[o,5,3e5],[o,15,9e5],[o,30,18e5],[u,1,36e5],[u,3,108e5],[u,6,216e5],[u,12,432e5],[i,1,864e5],[i,2,1728e5],[e,1,6048e5],[n,1,2592e6],[n,3,7776e6],[t,1,31536e6]];function x(r){return(a(r)<r?p:o(r)<r?g:u(r)<r?v:i(r)<r?m:n(r)<r?e(r)<r?y:b:t(r)<r?w:_)(r)}function O(n,e,i,u){if(null==n&&(n=10),"number"==typeof n){var o=Math.abs(i-e)/n,a=Object(r.bisector)((function(t){return t[2]})).right(M,o);a===M.length?(u=Object(r.tickStep)(e/31536e6,i/31536e6,n),n=t):a?(u=(a=M[o/M[a-1][2]<M[a][2]/o?a-1:a])[1],n=a[0]):(u=Math.max(Object(r.tickStep)(e,i,n),1),n=c)}return null==u?n:n.every(u)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(d.call(t,It)):h().map(Yt)},s.ticks=function(t,n){var e,r=h(),i=r[0],u=r[r.length-1],o=u<i;return o&&(e=i,i=u,u=e),e=(e=O(t,i,u,n))?e.range(i,u+1):[],o?e.reverse():e},s.tickFormat=function(t,n){return null==n?x:f(n)},s.nice=function(t,n){var e=h();return(t=O(t,e[0],e[e.length-1],n))?h(ot(e,t)):s},s.copy=function(){return q(s,qt(t,n,e,i,u,o,a,c,f))},s}var Ht=function(){return i.apply(qt(Nt.a,St.a,At.g,Ct.b,Dt.a,zt.a,Ut.a,Et.a,Ft.b).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},Pt=e(15),Lt=e(38),Xt=e(4),Vt=e(27),Bt=e(39),$t=e(40),Rt=function(){return i.apply(qt(Pt.a,Lt.a,Xt.g,Vt.a,Bt.a,$t.a,Ut.a,Et.a,Ft.d).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)};function Wt(){var t,n,e,r,i,u=0,o=1,a=U,c=!1;function f(n){return isNaN(n=+n)?i:a(0===e?.5:(n=(r(n)-t)*e,c?Math.max(0,Math.min(1,n)):n))}return f.domain=function(i){return arguments.length?(t=r(u=+i[0]),n=r(o=+i[1]),e=t===n?0:1/(n-t),f):[u,o]},f.clamp=function(t){return arguments.length?(c=!!t,f):c},f.interpolator=function(t){return arguments.length?(a=t,f):a},f.unknown=function(t){return arguments.length?(i=t,f):i},function(i){return r=i,t=i(u),n=i(o),e=t===n?0:1/(n-t),f}}function Zt(t,n){return n.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function Qt(){var t=rt(Wt()(U));return t.copy=function(){return Zt(t,Qt())},u.apply(t,arguments)}function Jt(){var t=dt(Wt()).domain([1,10]);return t.copy=function(){return Zt(t,Jt()).base(t.base())},u.apply(t,arguments)}function Gt(){var t=mt(Wt());return t.copy=function(){return Zt(t,Gt()).constant(t.constant())},u.apply(t,arguments)}function Kt(){var t=Mt(Wt());return t.copy=function(){return Zt(t,Kt()).exponent(t.exponent())},u.apply(t,arguments)}function tn(){return Kt.apply(null,arguments).exponent(.5)}function nn(){var t=[],n=U;function e(e){if(!isNaN(e=+e))return n((Object(r.bisect)(t,e)-1)/(t.length-1))}return e.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var i,u=0,o=n.length;u<o;++u)null==(i=n[u])||isNaN(i=+i)||t.push(i);return t.sort(r.ascending),e},e.interpolator=function(t){return arguments.length?(n=t,e):n},e.copy=function(){return nn(n).domain(t)},u.apply(e,arguments)}function en(){var t,n,e,r,i,u,o,a=0,c=.5,f=1,s=U,l=!1;function h(t){return isNaN(t=+t)?o:(t=.5+((t=+u(t))-n)*(t<n?r:i),s(l?Math.max(0,Math.min(1,t)):t))}return h.domain=function(o){return arguments.length?(t=u(a=+o[0]),n=u(c=+o[1]),e=u(f=+o[2]),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h):[a,c,f]},h.clamp=function(t){return arguments.length?(l=!!t,h):l},h.interpolator=function(t){return arguments.length?(s=t,h):s},h.unknown=function(t){return arguments.length?(o=t,h):o},function(o){return u=o,t=o(a),n=o(c),e=o(f),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h}}function rn(){var t=rt(en()(U));return t.copy=function(){return Zt(t,rn())},u.apply(t,arguments)}function un(){var t=dt(en()).domain([.1,1,10]);return t.copy=function(){return Zt(t,un()).base(t.base())},u.apply(t,arguments)}function on(){var t=mt(en());return t.copy=function(){return Zt(t,on()).constant(t.constant())},u.apply(t,arguments)}function an(){var t=Mt(en());return t.copy=function(){return Zt(t,an()).exponent(t.exponent())},u.apply(t,arguments)}function cn(){return an.apply(null,arguments).exponent(.5)}},function(t,n,e){"use strict";e.r(n),e.d(n,"zoom",(function(){return j})),e.d(n,"zoomTransform",(function(){return m})),e.d(n,"zoomIdentity",(function(){return v}));var r=e(65),i=e(19),u=Math.SQRT2;function o(t){return((t=Math.exp(t))+1/t)/2}var a=function(t,n){var e,r,i=t[0],a=t[1],c=t[2],f=n[0],s=n[1],l=n[2],h=f-i,d=s-a,p=h*h+d*d;if(p<1e-12)r=Math.log(l/c)/u,e=function(t){return[i+t*h,a+t*d,c*Math.exp(u*t*r)]};else{var g=Math.sqrt(p),v=(l*l-c*c+4*p)/(2*c*2*g),m=(l*l-c*c-4*p)/(2*l*2*g),y=Math.log(Math.sqrt(v*v+1)-v),b=Math.log(Math.sqrt(m*m+1)-m);r=(b-y)/u,e=function(t){var n,e=t*r,f=o(y),s=c/(2*g)*(f*(n=u*e+y,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(y));return[i+s*h,a+s*d,c*f/o(u*e+y)]}}return e.duration=1e3*r,e},c=e(9),f=e(45),s=e(20),l=e(46),h=e(28),d=function(t){return function(){return t}};function p(t,n,e){this.target=t,this.type=n,this.transform=e}function g(t,n,e){this.k=t,this.x=n,this.y=e}g.prototype={constructor:g,scale:function(t){return 1===t?this:new g(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new g(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var v=new g(1,0,0);function m(t){for(;!t.__zoom;)if(!(t=t.parentNode))return v;return t.__zoom}function y(){c.c.stopImmediatePropagation()}m.prototype=g.prototype;var b=function(){c.c.preventDefault(),c.c.stopImmediatePropagation()};function w(){return!c.c.ctrlKey&&!c.c.button}function _(){var t=this;return t instanceof SVGElement?(t=t.ownerSVGElement||t).hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]:[[0,0],[t.clientWidth,t.clientHeight]]}function M(){return this.__zoom||v}function x(){return-c.c.deltaY*(1===c.c.deltaMode?.05:c.c.deltaMode?1:.002)}function O(){return navigator.maxTouchPoints||"ontouchstart"in this}function k(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],u=t.invertY(n[0][1])-e[0][1],o=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),o>u?(u+o)/2:Math.min(0,u)||Math.max(0,o))}var j=function(){var t,n,e=w,u=_,o=k,m=x,j=O,T=[0,1/0],N=[[-1/0,-1/0],[1/0,1/0]],S=250,A=a,C=Object(r.a)("start","zoom","end"),D=0;function z(t){t.property("__zoom",M).on("wheel.zoom",H).on("mousedown.zoom",P).on("dblclick.zoom",L).filter(j).on("touchstart.zoom",X).on("touchmove.zoom",V).on("touchend.zoom touchcancel.zoom",B).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function U(t,n){return(n=Math.max(T[0],Math.min(T[1],n)))===t.k?t:new g(n,t.x,t.y)}function E(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new g(t.k,r,i)}function F(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function Y(t,n,e){t.on("start.zoom",(function(){I(this,arguments).start()})).on("interrupt.zoom end.zoom",(function(){I(this,arguments).end()})).tween("zoom",(function(){var t=this,r=arguments,i=I(t,r),o=u.apply(t,r),a=null==e?F(o):"function"==typeof e?e.apply(t,r):e,c=Math.max(o[1][0]-o[0][0],o[1][1]-o[0][1]),f=t.__zoom,s="function"==typeof n?n.apply(t,r):n,l=A(f.invert(a).concat(c/f.k),s.invert(a).concat(c/s.k));return function(t){if(1===t)t=s;else{var n=l(t),e=c/n[2];t=new g(e,a[0]-n[0]*e,a[1]-n[1]*e)}i.zoom(null,t)}}))}function I(t,n,e){return!e&&t.__zooming||new q(t,n)}function q(t,n){this.that=t,this.args=n,this.active=0,this.extent=u.apply(t,n),this.taps=0}function H(){if(e.apply(this,arguments)){var t=I(this,arguments),n=this.__zoom,r=Math.max(T[0],Math.min(T[1],n.k*Math.pow(2,m.apply(this,arguments)))),i=Object(f.a)(this);if(t.wheel)t.mouse[0][0]===i[0]&&t.mouse[0][1]===i[1]||(t.mouse[1]=n.invert(t.mouse[0]=i)),clearTimeout(t.wheel);else{if(n.k===r)return;t.mouse=[i,n.invert(i)],Object(h.interrupt)(this),t.start()}b(),t.wheel=setTimeout(u,150),t.zoom("mouse",o(E(U(n,r),t.mouse[0],t.mouse[1]),t.extent,N))}function u(){t.wheel=null,t.end()}}function P(){if(!n&&e.apply(this,arguments)){var t=I(this,arguments,!0),r=Object(s.a)(c.c.view).on("mousemove.zoom",d,!0).on("mouseup.zoom",p,!0),u=Object(f.a)(this),a=c.c.clientX,l=c.c.clientY;Object(i.a)(c.c.view),y(),t.mouse=[u,this.__zoom.invert(u)],Object(h.interrupt)(this),t.start()}function d(){if(b(),!t.moved){var n=c.c.clientX-a,e=c.c.clientY-l;t.moved=n*n+e*e>D}t.zoom("mouse",o(E(t.that.__zoom,t.mouse[0]=Object(f.a)(t.that),t.mouse[1]),t.extent,N))}function p(){r.on("mousemove.zoom mouseup.zoom",null),Object(i.b)(c.c.view,t.moved),b(),t.end()}}function L(){if(e.apply(this,arguments)){var t=this.__zoom,n=Object(f.a)(this),r=t.invert(n),i=t.k*(c.c.shiftKey?.5:2),a=o(E(U(t,i),n,r),u.apply(this,arguments),N);b(),S>0?Object(s.a)(this).transition().duration(S).call(Y,a,n):Object(s.a)(this).call(z.transform,a)}}function X(){if(e.apply(this,arguments)){var n,r,i,u,o=c.c.touches,a=o.length,f=I(this,arguments,c.c.changedTouches.length===a);for(y(),r=0;r<a;++r)i=o[r],u=[u=Object(l.a)(this,o,i.identifier),this.__zoom.invert(u),i.identifier],f.touch0?f.touch1||f.touch0[2]===u[2]||(f.touch1=u,f.taps=0):(f.touch0=u,n=!0,f.taps=1+!!t);t&&(t=clearTimeout(t)),n&&(f.taps<2&&(t=setTimeout((function(){t=null}),500)),Object(h.interrupt)(this),f.start())}}function V(){if(this.__zooming){var n,e,r,i,u=I(this,arguments),a=c.c.changedTouches,f=a.length;for(b(),t&&(t=clearTimeout(t)),u.taps=0,n=0;n<f;++n)e=a[n],r=Object(l.a)(this,a,e.identifier),u.touch0&&u.touch0[2]===e.identifier?u.touch0[0]=r:u.touch1&&u.touch1[2]===e.identifier&&(u.touch1[0]=r);if(e=u.that.__zoom,u.touch1){var s=u.touch0[0],h=u.touch0[1],d=u.touch1[0],p=u.touch1[1],g=(g=d[0]-s[0])*g+(g=d[1]-s[1])*g,v=(v=p[0]-h[0])*v+(v=p[1]-h[1])*v;e=U(e,Math.sqrt(g/v)),r=[(s[0]+d[0])/2,(s[1]+d[1])/2],i=[(h[0]+p[0])/2,(h[1]+p[1])/2]}else{if(!u.touch0)return;r=u.touch0[0],i=u.touch0[1]}u.zoom("touch",o(E(e,r,i),u.extent,N))}}function B(){if(this.__zooming){var t,e,r=I(this,arguments),i=c.c.changedTouches,u=i.length;for(y(),n&&clearTimeout(n),n=setTimeout((function(){n=null}),500),t=0;t<u;++t)e=i[t],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;if(r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0)r.touch0[1]=this.__zoom.invert(r.touch0[0]);else if(r.end(),2===r.taps){var o=Object(s.a)(this).on("dblclick.zoom");o&&o.apply(this,arguments)}}}return z.transform=function(t,n,e){var r=t.selection?t.selection():t;r.property("__zoom",M),t!==r?Y(t,n,e):r.interrupt().each((function(){I(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()}))},z.scaleBy=function(t,n,e){z.scaleTo(t,(function(){var t=this.__zoom.k,e="function"==typeof n?n.apply(this,arguments):n;return t*e}),e)},z.scaleTo=function(t,n,e){z.transform(t,(function(){var t=u.apply(this,arguments),r=this.__zoom,i=null==e?F(t):"function"==typeof e?e.apply(this,arguments):e,a=r.invert(i),c="function"==typeof n?n.apply(this,arguments):n;return o(E(U(r,c),i,a),t,N)}),e)},z.translateBy=function(t,n,e){z.transform(t,(function(){return o(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),u.apply(this,arguments),N)}))},z.translateTo=function(t,n,e,r){z.transform(t,(function(){var t=u.apply(this,arguments),i=this.__zoom,a=null==r?F(t):"function"==typeof r?r.apply(this,arguments):r;return o(v.translate(a[0],a[1]).scale(i.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,N)}),r)},q.prototype={start:function(){return 1==++this.active&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(delete this.that.__zooming,this.emit("end")),this},emit:function(t){Object(c.a)(new p(z,t,this.that.__zoom),C.apply,C,[t,this.that,this.args])}},z.wheelDelta=function(t){return arguments.length?(m="function"==typeof t?t:d(+t),z):m},z.filter=function(t){return arguments.length?(e="function"==typeof t?t:d(!!t),z):e},z.touchable=function(t){return arguments.length?(j="function"==typeof t?t:d(!!t),z):j},z.extent=function(t){return arguments.length?(u="function"==typeof t?t:d([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),z):u},z.scaleExtent=function(t){return arguments.length?(T[0]=+t[0],T[1]=+t[1],z):[T[0],T[1]]},z.translateExtent=function(t){return arguments.length?(N[0][0]=+t[0][0],N[1][0]=+t[1][0],N[0][1]=+t[0][1],N[1][1]=+t[1][1],z):[[N[0][0],N[0][1]],[N[1][0],N[1][1]]]},z.constrain=function(t){return arguments.length?(o=t,z):o},z.duration=function(t){return arguments.length?(S=+t,z):S},z.interpolate=function(t){return arguments.length?(A=t,z):A},z.on=function(){var t=C.on.apply(C,arguments);return t===C?z:t},z.clickDistance=function(t){return arguments.length?(D=(t=+t)*t,z):Math.sqrt(D)},z}},function(t,n,e){"use strict";e.r(n),e.d(n,"axisTop",(function(){return l})),e.d(n,"axisRight",(function(){return h})),e.d(n,"axisBottom",(function(){return d})),e.d(n,"axisLeft",(function(){return p}));var r=Array.prototype.slice,i=function(t){return t};function u(t){return"translate("+(t+.5)+",0)"}function o(t){return"translate(0,"+(t+.5)+")"}function a(t){return function(n){return+t(n)}}function c(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}function f(){return!this.__axis}function s(t,n){var e=[],s=null,l=null,h=6,d=6,p=3,g=1===t||4===t?-1:1,v=4===t||2===t?"x":"y",m=1===t||3===t?u:o;function y(r){var u=null==s?n.ticks?n.ticks.apply(n,e):n.domain():s,o=null==l?n.tickFormat?n.tickFormat.apply(n,e):i:l,y=Math.max(h,0)+p,b=n.range(),w=+b[0]+.5,_=+b[b.length-1]+.5,M=(n.bandwidth?c:a)(n.copy()),x=r.selection?r.selection():r,O=x.selectAll(".domain").data([null]),k=x.selectAll(".tick").data(u,n).order(),j=k.exit(),T=k.enter().append("g").attr("class","tick"),N=k.select("line"),S=k.select("text");O=O.merge(O.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),k=k.merge(T),N=N.merge(T.append("line").attr("stroke","currentColor").attr(v+"2",g*h)),S=S.merge(T.append("text").attr("fill","currentColor").attr(v,g*y).attr("dy",1===t?"0em":3===t?"0.71em":"0.32em")),r!==x&&(O=O.transition(r),k=k.transition(r),N=N.transition(r),S=S.transition(r),j=j.transition(r).attr("opacity",1e-6).attr("transform",(function(t){return isFinite(t=M(t))?m(t):this.getAttribute("transform")})),T.attr("opacity",1e-6).attr("transform",(function(t){var n=this.parentNode.__axis;return m(n&&isFinite(n=n(t))?n:M(t))}))),j.remove(),O.attr("d",4===t||2==t?d?"M"+g*d+","+w+"H0.5V"+_+"H"+g*d:"M0.5,"+w+"V"+_:d?"M"+w+","+g*d+"V0.5H"+_+"V"+g*d:"M"+w+",0.5H"+_),k.attr("opacity",1).attr("transform",(function(t){return m(M(t))})),N.attr(v+"2",g*h),S.attr(v,g*y).text(o),x.filter(f).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===t?"start":4===t?"end":"middle"),x.each((function(){this.__axis=M}))}return y.scale=function(t){return arguments.length?(n=t,y):n},y.ticks=function(){return e=r.call(arguments),y},y.tickArguments=function(t){return arguments.length?(e=null==t?[]:r.call(t),y):e.slice()},y.tickValues=function(t){return arguments.length?(s=null==t?null:r.call(t),y):s&&s.slice()},y.tickFormat=function(t){return arguments.length?(l=t,y):l},y.tickSize=function(t){return arguments.length?(h=d=+t,y):h},y.tickSizeInner=function(t){return arguments.length?(h=+t,y):h},y.tickSizeOuter=function(t){return arguments.length?(d=+t,y):d},y.tickPadding=function(t){return arguments.length?(p=+t,y):p},y}function l(t){return s(1,t)}function h(t){return s(2,t)}function d(t){return s(3,t)}function p(t){return s(4,t)}},function(t,n,e){"use strict";var r={value:function(){}};function i(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new u(r)}function u(t){this._=t}function o(t,n){return t.trim().split(/^|\s+/).map((function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}}))}function a(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function c(t,n,e){for(var i=0,u=t.length;i<u;++i)if(t[i].name===n){t[i]=r,t=t.slice(0,i).concat(t.slice(i+1));break}return null!=e&&t.push({name:n,value:e}),t}u.prototype=i.prototype={constructor:u,on:function(t,n){var e,r=this._,i=o(t+"",r),u=-1,f=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++u<f;)if(e=(t=i[u]).type)r[e]=c(r[e],t.name,n);else if(null==n)for(e in r)r[e]=c(r[e],t.name,null);return this}for(;++u<f;)if((e=(t=i[u]).type)&&(e=a(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new u(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),u=0;u<e;++u)i[u]=arguments[u+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(u=0,e=(r=this._[t]).length;u<e;++u)r[u].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,u=r.length;i<u;++i)r[i].value.apply(n,e)}},n.a=i},function(t,n,e){"use strict";e.d(n,"a",(function(){return b})),e.d(n,"b",(function(){return x}));var r=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function i(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function u(){}var o="\\s*([+-]?\\d+)\\s*",a="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",c="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",f=/^#([0-9a-f]{3,8})$/,s=new RegExp("^rgb\\("+[o,o,o]+"\\)$"),l=new RegExp("^rgb\\("+[c,c,c]+"\\)$"),h=new RegExp("^rgba\\("+[o,o,o,a]+"\\)$"),d=new RegExp("^rgba\\("+[c,c,c,a]+"\\)$"),p=new RegExp("^hsl\\("+[a,c,c]+"\\)$"),g=new RegExp("^hsla\\("+[a,c,c,a]+"\\)$"),v={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function m(){return this.rgb().formatHex()}function y(){return this.rgb().formatRgb()}function b(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=f.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?w(n):3===e?new O(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?_(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?_(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=s.exec(t))?new O(n[1],n[2],n[3],1):(n=l.exec(t))?new O(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=h.exec(t))?_(n[1],n[2],n[3],n[4]):(n=d.exec(t))?_(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=p.exec(t))?N(n[1],n[2]/100,n[3]/100,1):(n=g.exec(t))?N(n[1],n[2]/100,n[3]/100,n[4]):v.hasOwnProperty(t)?w(v[t]):"transparent"===t?new O(NaN,NaN,NaN,0):null}function w(t){return new O(t>>16&255,t>>8&255,255&t,1)}function _(t,n,e,r){return r<=0&&(t=n=e=NaN),new O(t,n,e,r)}function M(t){return t instanceof u||(t=b(t)),t?new O((t=t.rgb()).r,t.g,t.b,t.opacity):new O}function x(t,n,e,r){return 1===arguments.length?M(t):new O(t,n,e,null==r?1:r)}function O(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function k(){return"#"+T(this.r)+T(this.g)+T(this.b)}function j(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function T(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function N(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new A(t,n,e,r)}function S(t){if(t instanceof A)return new A(t.h,t.s,t.l,t.opacity);if(t instanceof u||(t=b(t)),!t)return new A;if(t instanceof A)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),a=NaN,c=o-i,f=(o+i)/2;return c?(a=n===o?(e-r)/c+6*(e<r):e===o?(r-n)/c+2:(n-e)/c+4,c/=f<.5?o+i:2-o-i,a*=60):c=f>0&&f<1?0:a,new A(a,c,f,t.opacity)}function A(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function C(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}r(u,b,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:m,formatHex:m,formatHsl:function(){return S(this).formatHsl()},formatRgb:y,toString:y}),r(O,x,i(u,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new O(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new O(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:k,formatHex:k,formatRgb:j,toString:j})),r(A,(function(t,n,e,r){return 1===arguments.length?S(t):new A(t,n,e,null==r?1:r)}),i(u,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new A(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new A(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new O(C(t>=240?t-240:t+120,i,r),C(t,i,r),C(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}))}]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,